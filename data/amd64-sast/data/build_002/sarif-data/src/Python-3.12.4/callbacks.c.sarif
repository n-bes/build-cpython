{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
 "version": "2.1.0",
 "runs": [{"tool": {"driver": {"name": "GNU C11",
                               "fullName": "GNU C11 (GCC) version 14.2.1 20240801 (Red Hat 14.2.1-1) (x86_64-redhat-linux)",
                               "version": "14.2.1 20240801 (Red Hat 14.2.1-1)",
                               "informationUri": "https://gcc.gnu.org/gcc-14/",
                               "rules": [{"id": "-Wanalyzer-use-of-uninitialized-value",
                                          "helpUri": "https://gcc.gnu.org/onlinedocs/gcc-14.2.0/gcc/Static-Analyzer-Options.html#index-Wanalyzer-use-of-uninitialized-value"}]}},
           "taxonomies": [{"name": "CWE",
                           "version": "4.7",
                           "organization": "MITRE",
                           "shortDescription": {"text": "The MITRE Common Weakness Enumeration"},
                           "taxa": [{"id": "457",
                                     "helpUri": "https://cwe.mitre.org/data/definitions/457.html"}]}],
           "invocations": [{"executionSuccessful": true,
                            "toolExecutionNotifications": []}],
           "originalUriBaseIds": {"PWD": {"uri": "file:///src/Python-3.12.4/"}},
           "artifacts": [{"location": {"uri": "./Modules/_ctypes/callbacks.c",
                                       "uriBaseId": "PWD"},
                          "contents": {"text": "#ifndef Py_BUILD_CORE_BUILTIN\n#  define Py_BUILD_CORE_MODULE 1\n#endif\n\n#include \"Python.h\"\n// windows.h must be included before pycore internal headers\n#ifdef MS_WIN32\n#  include <windows.h>\n#endif\n\n#include \"pycore_call.h\"            // _PyObject_CallNoArgs()\n#include \"pycore_runtime.h\"         // _PyRuntime\n#include \"pycore_global_objects.h\"  // _Py_ID()\n\n#include <stdbool.h>\n\n#ifdef MS_WIN32\n#  include <malloc.h>\n#endif\n\n#include <ffi.h>\n#include \"ctypes.h\"\n\n#ifdef HAVE_ALLOCA_H\n/* AIX needs alloca.h for alloca() */\n#include <alloca.h>\n#endif\n\n/**************************************************************/\n\nstatic int\nCThunkObject_traverse(PyObject *myself, visitproc visit, void *arg)\n{\n    CThunkObject *self = (CThunkObject *)myself;\n    Py_VISIT(Py_TYPE(self));\n    Py_VISIT(self->converters);\n    Py_VISIT(self->callable);\n    Py_VISIT(self->restype);\n    return 0;\n}\n\nstatic int\nCThunkObject_clear(PyObject *myself)\n{\n    CThunkObject *self = (CThunkObject *)myself;\n    Py_CLEAR(self->converters);\n    Py_CLEAR(self->callable);\n    Py_CLEAR(self->restype);\n    return 0;\n}\n\nstatic void\nCThunkObject_dealloc(PyObject *myself)\n{\n    CThunkObject *self = (CThunkObject *)myself;\n    PyTypeObject *tp = Py_TYPE(myself);\n    PyObject_GC_UnTrack(self);\n    (void)CThunkObject_clear(myself);\n    if (self->pcl_write) {\n        Py_ffi_closure_free(self->pcl_write);\n    }\n    PyObject_GC_Del(self);\n    Py_DECREF(tp);\n}\n\nstatic PyType_Slot cthunk_slots[] = {\n    {Py_tp_doc, (void *)PyDoc_STR(\"CThunkObject\")},\n    {Py_tp_dealloc, CThunkObject_dealloc},\n    {Py_tp_traverse, CThunkObject_traverse},\n    {Py_tp_clear, CThunkObject_clear},\n    {0, NULL},\n};\n\nPyType_Spec cthunk_spec = {\n    .name = \"_ctypes.CThunkObject\",\n    .basicsize = sizeof(CThunkObject),\n    .itemsize = sizeof(ffi_type),\n    .flags = (Py_TPFLAGS_DEFAULT | Py_TPFLAGS_HAVE_GC |\n              Py_TPFLAGS_IMMUTABLETYPE | Py_TPFLAGS_DISALLOW_INSTANTIATION),\n    .slots = cthunk_slots,\n};\n\n/**************************************************************/\n\nstatic void\nPrintError(const char *msg, ...)\n{\n    char buf[512];\n    PyObject *f = PySys_GetObject(\"stderr\");\n    va_list marker;\n\n    va_start(marker, msg);\n    PyOS_vsnprintf(buf, sizeof(buf), msg, marker);\n    va_end(marker);\n    if (f != NULL && f != Py_None)\n        PyFile_WriteString(buf, f);\n    PyErr_Print();\n}\n\n\n#ifdef MS_WIN32\n/*\n * We must call AddRef() on non-NULL COM pointers we receive as arguments\n * to callback functions - these functions are COM method implementations.\n * The Python instances we create have a __del__ method which calls Release().\n *\n * The presence of a class attribute named '_needs_com_addref_' triggers this\n * behaviour.  It would also be possible to call the AddRef() Python method,\n * after checking for PyObject_IsTrue(), but this would probably be somewhat\n * slower.\n */\nstatic void\nTryAddRef(StgDictObject *dict, CDataObject *obj)\n{\n    IUnknown *punk;\n    int r = PyDict_Contains((PyObject *)dict, &_Py_ID(_needs_com_addref_));\n    if (r <= 0) {\n        if (r < 0) {\n            PrintError(\"getting _needs_com_addref_\");\n        }\n        return;\n    }\n\n    punk = *(IUnknown **)obj->b_ptr;\n    if (punk)\n        punk->lpVtbl->AddRef(punk);\n    return;\n}\n#endif\n\n/******************************************************************************\n *\n * Call the python object with all arguments\n *\n */\nstatic void _CallPythonObject(void *mem,\n                              ffi_type *restype,\n                              SETFUNC setfunc,\n                              PyObject *callable,\n                              PyObject *converters,\n                              int flags,\n                              void **pArgs)\n{\n    PyObject *result = NULL;\n    Py_ssize_t i = 0, j = 0, nargs = 0;\n    PyObject *error_object = NULL;\n    int *space;\n    PyGILState_STATE state = PyGILState_Ensure();\n\n    assert(PyTuple_Check(converters));\n    nargs = PyTuple_GET_SIZE(converters);\n    assert(nargs <= CTYPES_MAX_ARGCOUNT);\n    PyObject **args = alloca(nargs * sizeof(PyObject *));\n    PyObject **cnvs = PySequence_Fast_ITEMS(converters);\n    for (i = 0; i < nargs; i++) {\n        PyObject *cnv = cnvs[i]; // borrowed ref\n        StgDictObject *dict;\n        dict = PyType_stgdict(cnv);\n\n        if (dict && dict->getfunc && !_ctypes_simple_instance(cnv)) {\n            PyObject *v = dict->getfunc(*pArgs, dict->size);\n            if (!v) {\n                PrintError(\"create argument %zd:\\n\", i);\n                goto Done;\n            }\n            args[i] = v;\n            /* XXX XXX XX\n               We have the problem that c_byte or c_short have dict->size of\n               1 resp. 4, but these parameters are pushed as sizeof(int) bytes.\n               BTW, the same problem occurs when they are pushed as parameters\n            */\n        } else if (dict) {\n            /* Hm, shouldn't we use PyCData_AtAddress() or something like that instead? */\n            CDataObject *obj = (CDataObject *)_PyObject_CallNoArgs(cnv);\n            if (!obj) {\n                PrintError(\"create argument %zd:\\n\", i);\n                goto Done;\n            }\n            if (!CDataObject_Check(obj)) {\n                Py_DECREF(obj);\n                PrintError(\"unexpected result of create argument %zd:\\n\", i);\n                goto Done;\n            }\n            memcpy(obj->b_ptr, *pArgs, dict->size);\n            args[i] = (PyObject *)obj;\n#ifdef MS_WIN32\n            TryAddRef(dict, obj);\n#endif\n        } else {\n            PyErr_SetString(PyExc_TypeError,\n                            \"cannot build parameter\");\n            PrintError(\"Parsing argument %zd\\n\", i);\n            goto Done;\n        }\n        /* XXX error handling! */\n        pArgs++;\n    }\n\n    if (flags & (FUNCFLAG_USE_ERRNO | FUNCFLAG_USE_LASTERROR)) {\n        error_object = _ctypes_get_errobj(&space);\n        if (error_object == NULL)\n            goto Done;\n        if (flags & FUNCFLAG_USE_ERRNO) {\n            int temp = space[0];\n            space[0] = errno;\n            errno = temp;\n        }\n#ifdef MS_WIN32\n        if (flags & FUNCFLAG_USE_LASTERROR) {\n            int temp = space[1];\n            space[1] = GetLastError();\n            SetLastError(temp);\n        }\n#endif\n    }\n\n    result = PyObject_Vectorcall(callable, args, nargs, NULL);\n    if (result == NULL) {\n        _PyErr_WriteUnraisableMsg(\"on calling ctypes callback function\",\n                                  callable);\n    }\n\n#ifdef MS_WIN32\n    if (flags & FUNCFLAG_USE_LASTERROR) {\n        int temp = space[1];\n        space[1] = GetLastError();\n        SetLastError(temp);\n    }\n#endif\n    if (flags & FUNCFLAG_USE_ERRNO) {\n        int temp = space[0];\n        space[0] = errno;\n        errno = temp;\n    }\n    Py_XDECREF(error_object);\n\n    if (restype != &ffi_type_void && result) {\n        assert(setfunc);\n\n#ifdef WORDS_BIGENDIAN\n        /* See the corresponding code in _ctypes_callproc():\n           in callproc.c, around line 1219. */\n        if (restype->type != FFI_TYPE_FLOAT && restype->size < sizeof(ffi_arg)) {\n            mem = (char *)mem + sizeof(ffi_arg) - restype->size;\n        }\n#endif\n\n        /* keep is an object we have to keep alive so that the result\n           stays valid.  If there is no such object, the setfunc will\n           have returned Py_None.\n\n           If there is such an object, we have no choice than to keep\n           it alive forever - but a refcount and/or memory leak will\n           be the result.  EXCEPT when restype is py_object - Python\n           itself knows how to manage the refcount of these objects.\n        */\n        PyObject *keep = setfunc(mem, result, 0);\n\n        if (keep == NULL) {\n            /* Could not convert callback result. */\n            _PyErr_WriteUnraisableMsg(\"on converting result \"\n                                      \"of ctypes callback function\",\n                                      callable);\n        }\n        else if (setfunc != _ctypes_get_fielddesc(\"O\")->setfunc) {\n            if (keep == Py_None) {\n                /* Nothing to keep */\n                Py_DECREF(keep);\n            }\n            else if (PyErr_WarnEx(PyExc_RuntimeWarning,\n                                  \"memory leak in callback function.\",\n                                  1) == -1) {\n                _PyErr_WriteUnraisableMsg(\"on converting result \"\n                                          \"of ctypes callback function\",\n                                          callable);\n            }\n        }\n    }\n\n    Py_XDECREF(result);\n\n  Done:\n    for (j = 0; j < i; j++) {\n        Py_DECREF(args[j]);\n    }\n    PyGILState_Release(state);\n}\n\nstatic void closure_fcn(ffi_cif *cif,\n                        void *resp,\n                        void **args,\n                        void *userdata)\n{\n    CThunkObject *p = (CThunkObject *)userdata;\n\n    _CallPythonObject(resp,\n                      p->ffi_restype,\n                      p->setfunc,\n                      p->callable,\n                      p->converters,\n                      p->flags,\n                      args);\n}\n\nstatic CThunkObject* CThunkObject_new(Py_ssize_t nargs)\n{\n    CThunkObject *p;\n    Py_ssize_t i;\n\n    ctypes_state *st = GLOBAL_STATE();\n    p = PyObject_GC_NewVar(CThunkObject, st->PyCThunk_Type, nargs);\n    if (p == NULL) {\n        return NULL;\n    }\n\n    p->pcl_write = NULL;\n    p->pcl_exec = NULL;\n    memset(&p->cif, 0, sizeof(p->cif));\n    p->flags = 0;\n    p->converters = NULL;\n    p->callable = NULL;\n    p->restype = NULL;\n    p->setfunc = NULL;\n    p->ffi_restype = NULL;\n\n    for (i = 0; i < nargs + 1; ++i)\n        p->atypes[i] = NULL;\n    PyObject_GC_Track((PyObject *)p);\n    return p;\n}\n\nCThunkObject *_ctypes_alloc_callback(PyObject *callable,\n                                    PyObject *converters,\n                                    PyObject *restype,\n                                    int flags)\n{\n    int result;\n    CThunkObject *p;\n    Py_ssize_t nargs, i;\n    ffi_abi cc;\n\n    assert(PyTuple_Check(converters));\n    nargs = PyTuple_GET_SIZE(converters);\n    p = CThunkObject_new(nargs);\n    if (p == NULL)\n        return NULL;\n\n#ifdef Py_DEBUG\n    ctypes_state *st = GLOBAL_STATE();\n    assert(CThunk_CheckExact(st, (PyObject *)p));\n#endif\n\n    p->pcl_write = Py_ffi_closure_alloc(sizeof(ffi_closure), &p->pcl_exec);\n    if (p->pcl_write == NULL) {\n        PyErr_NoMemory();\n        goto error;\n    }\n\n    p->flags = flags;\n    PyObject **cnvs = PySequence_Fast_ITEMS(converters);\n    for (i = 0; i < nargs; ++i) {\n        PyObject *cnv = cnvs[i]; // borrowed ref\n        p->atypes[i] = _ctypes_get_ffi_type(cnv);\n    }\n    p->atypes[i] = NULL;\n\n    p->restype = Py_NewRef(restype);\n    if (restype == Py_None) {\n        p->setfunc = NULL;\n        p->ffi_restype = &ffi_type_void;\n    } else {\n        StgDictObject *dict = PyType_stgdict(restype);\n        if (dict == NULL || dict->setfunc == NULL) {\n          PyErr_SetString(PyExc_TypeError,\n                          \"invalid result type for callback function\");\n          goto error;\n        }\n        p->setfunc = dict->setfunc;\n        p->ffi_restype = &dict->ffi_type_pointer;\n    }\n\n    cc = FFI_DEFAULT_ABI;\n#if defined(MS_WIN32) && !defined(_WIN32_WCE) && !defined(MS_WIN64) && !defined(_M_ARM)\n    if ((flags & FUNCFLAG_CDECL) == 0)\n        cc = FFI_STDCALL;\n#endif\n    result = ffi_prep_cif(&p->cif, cc,\n                          Py_SAFE_DOWNCAST(nargs, Py_ssize_t, int),\n                          p->ffi_restype,\n                          &p->atypes[0]);\n    if (result != FFI_OK) {\n        PyErr_Format(PyExc_RuntimeError,\n                     \"ffi_prep_cif failed with %d\", result);\n        goto error;\n    }\n\n\n#if HAVE_FFI_PREP_CLOSURE_LOC\n#   ifdef USING_APPLE_OS_LIBFFI\n#    ifdef HAVE_BUILTIN_AVAILABLE\n#      define HAVE_FFI_PREP_CLOSURE_LOC_RUNTIME __builtin_available(macos 10.15, ios 13, watchos 6, tvos 13, *)\n#    else\n#      define HAVE_FFI_PREP_CLOSURE_LOC_RUNTIME (ffi_prep_closure_loc != NULL)\n#    endif\n#   else\n#      define HAVE_FFI_PREP_CLOSURE_LOC_RUNTIME 1\n#   endif\n    if (HAVE_FFI_PREP_CLOSURE_LOC_RUNTIME) {\n        result = ffi_prep_closure_loc(p->pcl_write, &p->cif, closure_fcn,\n                                    p,\n                                    p->pcl_exec);\n    } else\n#endif\n    {\n#if defined(USING_APPLE_OS_LIBFFI) && defined(__arm64__)\n        PyErr_Format(PyExc_NotImplementedError, \"ffi_prep_closure_loc() is missing\");\n        goto error;\n#else\n#if defined(__clang__)\n        #pragma clang diagnostic push\n        #pragma clang diagnostic ignored \"-Wdeprecated-declarations\"\n#endif\n#if defined(__GNUC__) && ((__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ > 5)))\n        #pragma GCC diagnostic push\n        #pragma GCC diagnostic ignored \"-Wdeprecated-declarations\"\n#endif\n        result = ffi_prep_closure(p->pcl_write, &p->cif, closure_fcn, p);\n\n#if defined(__clang__)\n        #pragma clang diagnostic pop\n#endif\n#if defined(__GNUC__) && ((__GNUC__ > 4) || ((__GNUC__ == 4) && (__GNUC_MINOR__ > 5)))\n        #pragma GCC diagnostic pop\n#endif\n\n#endif\n    }\n    if (result != FFI_OK) {\n        PyErr_Format(PyExc_RuntimeError,\n                     \"ffi_prep_closure failed with %d\", result);\n        goto error;\n    }\n\n    p->converters = Py_NewRef(converters);\n    p->callable = Py_NewRef(callable);\n    return p;\n\n  error:\n    Py_XDECREF(p);\n    return NULL;\n}\n\n#ifdef MS_WIN32\n\nstatic void LoadPython(void)\n{\n    if (!Py_IsInitialized()) {\n        Py_Initialize();\n    }\n}\n\n/******************************************************************/\n\nlong Call_GetClassObject(REFCLSID rclsid, REFIID riid, LPVOID *ppv)\n{\n    PyObject *func, *result;\n    long retval;\n    static PyObject *context;\n\n    if (context == NULL)\n        context = PyUnicode_InternFromString(\"_ctypes.DllGetClassObject\");\n\n    func = _PyImport_GetModuleAttrString(\"ctypes\", \"DllGetClassObject\");\n    if (!func) {\n        PyErr_WriteUnraisable(context ? context : Py_None);\n        /* There has been a warning before about this already */\n        return E_FAIL;\n    }\n\n    {\n        PyObject *py_rclsid = PyLong_FromVoidPtr((void *)rclsid);\n        if (py_rclsid == NULL) {\n            Py_DECREF(func);\n            PyErr_WriteUnraisable(context ? context : Py_None);\n            return E_FAIL;\n        }\n        PyObject *py_riid = PyLong_FromVoidPtr((void *)riid);\n        if (py_riid == NULL) {\n            Py_DECREF(func);\n            Py_DECREF(py_rclsid);\n            PyErr_WriteUnraisable(context ? context : Py_None);\n            return E_FAIL;\n        }\n        PyObject *py_ppv = PyLong_FromVoidPtr(ppv);\n        if (py_ppv == NULL) {\n            Py_DECREF(py_rclsid);\n            Py_DECREF(py_riid);\n            Py_DECREF(func);\n            PyErr_WriteUnraisable(context ? context : Py_None);\n            return E_FAIL;\n        }\n        result = PyObject_CallFunctionObjArgs(func,\n                                              py_rclsid,\n                                              py_riid,\n                                              py_ppv,\n                                              NULL);\n        Py_DECREF(py_rclsid);\n        Py_DECREF(py_riid);\n        Py_DECREF(py_ppv);\n    }\n    Py_DECREF(func);\n    if (!result) {\n        PyErr_WriteUnraisable(context ? context : Py_None);\n        return E_FAIL;\n    }\n\n    retval = PyLong_AsLong(result);\n    if (PyErr_Occurred()) {\n        PyErr_WriteUnraisable(context ? context : Py_None);\n        retval = E_FAIL;\n    }\n    Py_DECREF(result);\n    return retval;\n}\n\nSTDAPI DllGetClassObject(REFCLSID rclsid,\n                         REFIID riid,\n                         LPVOID *ppv)\n{\n    long result;\n    PyGILState_STATE state;\n\n    LoadPython();\n    state = PyGILState_Ensure();\n    result = Call_GetClassObject(rclsid, riid, ppv);\n    PyGILState_Release(state);\n    return result;\n}\n\nlong Call_CanUnloadNow(void)\n{\n    PyObject *mod, *func, *result;\n    long retval;\n    static PyObject *context;\n\n    if (context == NULL)\n        context = PyUnicode_InternFromString(\"_ctypes.DllCanUnloadNow\");\n\n    mod = PyImport_ImportModule(\"ctypes\");\n    if (!mod) {\n/*              OutputDebugString(\"Could not import ctypes\"); */\n        /* We assume that this error can only occur when shutting\n           down, so we silently ignore it */\n        PyErr_Clear();\n        return E_FAIL;\n    }\n    /* Other errors cannot be raised, but are printed to stderr */\n    func = PyObject_GetAttrString(mod, \"DllCanUnloadNow\");\n    Py_DECREF(mod);\n    if (!func) {\n        PyErr_WriteUnraisable(context ? context : Py_None);\n        return E_FAIL;\n    }\n\n    result = _PyObject_CallNoArgs(func);\n    Py_DECREF(func);\n    if (!result) {\n        PyErr_WriteUnraisable(context ? context : Py_None);\n        return E_FAIL;\n    }\n\n    retval = PyLong_AsLong(result);\n    if (PyErr_Occurred()) {\n        PyErr_WriteUnraisable(context ? context : Py_None);\n        retval = E_FAIL;\n    }\n    Py_DECREF(result);\n    return retval;\n}\n\n/*\n  DllRegisterServer and DllUnregisterServer still missing\n*/\n\nSTDAPI DllCanUnloadNow(void)\n{\n    long result;\n    PyGILState_STATE state = PyGILState_Ensure();\n    result = Call_CanUnloadNow();\n    PyGILState_Release(state);\n    return result;\n}\n\n#ifndef Py_NO_ENABLE_SHARED\nBOOL WINAPI DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpvRes)\n{\n    switch(fdwReason) {\n    case DLL_PROCESS_ATTACH:\n        DisableThreadLibraryCalls(hinstDLL);\n        break;\n    }\n    return TRUE;\n}\n#endif\n\n#endif\n\n/*\n Local Variables:\n compile-command: \"cd .. && python setup.py -q build_ext\"\n End:\n*/\n"},
                          "sourceLanguage": "c"}],
           "results": [{"ruleId": "-Wanalyzer-use-of-uninitialized-value",
                        "taxa": [{"id": "457",
                                  "toolComponent": {"name": "cwe"}}],
                        "properties": {"gcc/analyzer/saved_diagnostic/enode": 2114,
                                       "gcc/analyzer/saved_diagnostic/snode": 93,
                                       "gcc/analyzer/saved_diagnostic/idx": 4},
                        "level": "warning",
                        "message": {"text": "use of uninitialized value 'space'"},
                        "locations": [{"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                 "uriBaseId": "PWD"},
                                                            "region": {"startLine": 231,
                                                                       "startColumn": 20,
                                                                       "endColumn": 28},
                                                            "contextRegion": {"startLine": 231,
                                                                              "snippet": {"text": "        int temp = space[0];\n"}}},
                                       "logicalLocations": [{"name": "_CallPythonObject",
                                                             "fullyQualifiedName": "_CallPythonObject",
                                                             "decoratedName": "_CallPythonObject",
                                                             "kind": "function"}]}],
                        "codeFlows": [{"threadFlows": [{"id": "main",
                                                        "locations": [{"properties": {"gcc/analyzer/checker_event/emission_id": "(1)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_REGION_CREATION"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 147,
                                                                                                                    "startColumn": 10,
                                                                                                                    "endColumn": 15},
                                                                                                         "contextRegion": {"startLine": 147,
                                                                                                                           "snippet": {"text": "    int *space;\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "region created on stack here"}},
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 1},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(2)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_REGION_CREATION"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 147,
                                                                                                                    "startColumn": 10,
                                                                                                                    "endColumn": 15},
                                                                                                         "contextRegion": {"startLine": 147,
                                                                                                                           "snippet": {"text": "    int *space;\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "capacity: 8 bytes"}},
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 2},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(3)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 83,
                                                                                                                                 "dst_idx": 90,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 199,
                                                                                                                    "startColumn": 8,
                                                                                                                    "endColumn": 9},
                                                                                                         "contextRegion": {"startLine": 199,
                                                                                                                           "snippet": {"text": "    if (flags & (FUNCFLAG_USE_ERRNO | FUNCFLAG_USE_LASTERROR)) {\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'false' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 3},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(4)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 83,
                                                                                                                                 "dst_idx": 90,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 217,
                                                                                                                    "startColumn": 14,
                                                                                                                    "endColumn": 62},
                                                                                                         "contextRegion": {"startLine": 217,
                                                                                                                           "snippet": {"text": "    result = PyObject_Vectorcall(callable, args, nargs, NULL);\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 4},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(5)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 92,
                                                                                                                                 "dst_idx": 93,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 230,
                                                                                                                    "startColumn": 8,
                                                                                                                    "endColumn": 9},
                                                                                                         "contextRegion": {"startLine": 230,
                                                                                                                           "snippet": {"text": "    if (flags & FUNCFLAG_USE_ERRNO) {\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'true' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 5},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(6)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 92,
                                                                                                                                 "dst_idx": 93,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 231,
                                                                                                                    "startColumn": 20,
                                                                                                                    "endColumn": 28},
                                                                                                         "contextRegion": {"startLine": 231,
                                                                                                                           "snippet": {"text": "        int temp = space[0];\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 6},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(7)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_WARNING"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 231,
                                                                                                                    "startColumn": 20,
                                                                                                                    "endColumn": 28},
                                                                                                         "contextRegion": {"startLine": 231,
                                                                                                                           "snippet": {"text": "        int temp = space[0];\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "use of uninitialized value 'space' here"}},
                                                                       "kinds": ["danger"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 7}]}]}]},
                       {"ruleId": "-Wanalyzer-use-of-uninitialized-value",
                        "taxa": [{"id": "457",
                                  "toolComponent": {"name": "cwe"}}],
                        "properties": {"gcc/analyzer/saved_diagnostic/enode": 1014,
                                       "gcc/analyzer/saved_diagnostic/snode": 93,
                                       "gcc/analyzer/saved_diagnostic/idx": 0},
                        "level": "warning",
                        "message": {"text": "use of uninitialized value 'space'"},
                        "locations": [{"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                 "uriBaseId": "PWD"},
                                                            "region": {"startLine": 231,
                                                                       "startColumn": 20,
                                                                       "endColumn": 28},
                                                            "contextRegion": {"startLine": 231,
                                                                              "snippet": {"text": "        int temp = space[0];\n"}}},
                                       "logicalLocations": [{"name": "_CallPythonObject",
                                                             "fullyQualifiedName": "_CallPythonObject",
                                                             "decoratedName": "_CallPythonObject",
                                                             "kind": "function"}]}],
                        "codeFlows": [{"threadFlows": [{"id": "main",
                                                        "locations": [{"properties": {"gcc/analyzer/checker_event/emission_id": "(1)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_FUNCTION_ENTRY"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 289,
                                                                                                                    "startColumn": 13,
                                                                                                                    "endColumn": 24},
                                                                                                         "contextRegion": {"startLine": 289,
                                                                                                                           "snippet": {"text": "static void closure_fcn(ffi_cif *cif,\n"}}},
                                                                                    "logicalLocations": [{"name": "closure_fcn",
                                                                                                          "fullyQualifiedName": "closure_fcn",
                                                                                                          "decoratedName": "closure_fcn",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "entry to 'closure_fcn'"}},
                                                                       "kinds": ["enter",
                                                                                 "function"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 1},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(2)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_CALL_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CALL",
                                                                                                                                 "src_idx": 51,
                                                                                                                                 "dst_idx": 54,
                                                                                                                                 "desc": "call"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 296,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endLine": 302,
                                                                                                                    "endColumn": 28},
                                                                                                         "contextRegion": {"startLine": 296,
                                                                                                                           "endLine": 302,
                                                                                                                           "snippet": {"text": "    _CallPythonObject(resp,\n                      p->ffi_restype,\n                      p->setfunc,\n                      p->callable,\n                      p->converters,\n                      p->flags,\n                      args);\n"}}},
                                                                                    "logicalLocations": [{"name": "closure_fcn",
                                                                                                          "fullyQualifiedName": "closure_fcn",
                                                                                                          "decoratedName": "closure_fcn",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "calling '_CallPythonObject' from 'closure_fcn'"}},
                                                                       "kinds": ["call",
                                                                                 "function"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 2},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(3)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_FUNCTION_ENTRY"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 136,
                                                                                                                    "startColumn": 13,
                                                                                                                    "endColumn": 30},
                                                                                                         "contextRegion": {"startLine": 136,
                                                                                                                           "snippet": {"text": "static void _CallPythonObject(void *mem,\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "entry to '_CallPythonObject'"}},
                                                                       "kinds": ["enter",
                                                                                 "function"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 3},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(4)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_REGION_CREATION"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 147,
                                                                                                                    "startColumn": 10,
                                                                                                                    "endColumn": 15},
                                                                                                         "contextRegion": {"startLine": 147,
                                                                                                                           "snippet": {"text": "    int *space;\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "region created on stack here"}},
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 4},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(5)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_REGION_CREATION"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 147,
                                                                                                                    "startColumn": 10,
                                                                                                                    "endColumn": 15},
                                                                                                         "contextRegion": {"startLine": 147,
                                                                                                                           "snippet": {"text": "    int *space;\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "capacity: 8 bytes"}},
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 5},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(6)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 83,
                                                                                                                                 "dst_idx": 90,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 199,
                                                                                                                    "startColumn": 8,
                                                                                                                    "endColumn": 9},
                                                                                                         "contextRegion": {"startLine": 199,
                                                                                                                           "snippet": {"text": "    if (flags & (FUNCFLAG_USE_ERRNO | FUNCFLAG_USE_LASTERROR)) {\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'false' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 6},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(7)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 83,
                                                                                                                                 "dst_idx": 90,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 217,
                                                                                                                    "startColumn": 14,
                                                                                                                    "endColumn": 62},
                                                                                                         "contextRegion": {"startLine": 217,
                                                                                                                           "snippet": {"text": "    result = PyObject_Vectorcall(callable, args, nargs, NULL);\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 7},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(8)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 92,
                                                                                                                                 "dst_idx": 93,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 230,
                                                                                                                    "startColumn": 8,
                                                                                                                    "endColumn": 9},
                                                                                                         "contextRegion": {"startLine": 230,
                                                                                                                           "snippet": {"text": "    if (flags & FUNCFLAG_USE_ERRNO) {\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'true' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 8},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(9)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 92,
                                                                                                                                 "dst_idx": 93,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 231,
                                                                                                                    "startColumn": 20,
                                                                                                                    "endColumn": 28},
                                                                                                         "contextRegion": {"startLine": 231,
                                                                                                                           "snippet": {"text": "        int temp = space[0];\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 9},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(10)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_WARNING"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_ctypes/callbacks.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 231,
                                                                                                                    "startColumn": 20,
                                                                                                                    "endColumn": 28},
                                                                                                         "contextRegion": {"startLine": 231,
                                                                                                                           "snippet": {"text": "        int temp = space[0];\n"}}},
                                                                                    "logicalLocations": [{"name": "_CallPythonObject",
                                                                                                          "fullyQualifiedName": "_CallPythonObject",
                                                                                                          "decoratedName": "_CallPythonObject",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "use of uninitialized value 'space' here"}},
                                                                       "kinds": ["danger"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 10}]}]}]}]}]}
