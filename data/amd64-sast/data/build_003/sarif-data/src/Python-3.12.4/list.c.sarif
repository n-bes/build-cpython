{"$schema": "https://raw.githubusercontent.com/oasis-tcs/sarif-spec/master/Schemata/sarif-schema-2.1.0.json",
 "version": "2.1.0",
 "runs": [{"tool": {"driver": {"name": "GNU C11",
                               "fullName": "GNU C11 (GCC) version 14.2.1 20240801 (Red Hat 14.2.1-1) (x86_64-redhat-linux)",
                               "version": "14.2.1 20240801 (Red Hat 14.2.1-1)",
                               "informationUri": "https://gcc.gnu.org/gcc-14/",
                               "rules": [{"id": "-Wanalyzer-null-dereference",
                                          "helpUri": "https://gcc.gnu.org/onlinedocs/gcc-14.2.0/gcc/Static-Analyzer-Options.html#index-Wanalyzer-null-dereference"}]}},
           "taxonomies": [{"name": "CWE",
                           "version": "4.7",
                           "organization": "MITRE",
                           "shortDescription": {"text": "The MITRE Common Weakness Enumeration"},
                           "taxa": [{"id": "476",
                                     "helpUri": "https://cwe.mitre.org/data/definitions/476.html"}]}],
           "invocations": [{"executionSuccessful": true,
                            "toolExecutionNotifications": []}],
           "originalUriBaseIds": {"PWD": {"uri": "file:///src/Python-3.12.4/"}},
           "artifacts": [{"location": {"uri": "./Modules/_testcapi/list.c",
                                       "uriBaseId": "PWD"},
                          "contents": {"text": "#include \"parts.h\"\n#include \"util.h\"\n\nstatic PyObject *\nlist_check(PyObject* Py_UNUSED(module), PyObject *obj)\n{\n    NULLABLE(obj);\n    return PyLong_FromLong(PyList_Check(obj));\n}\n\nstatic PyObject *\nlist_check_exact(PyObject* Py_UNUSED(module), PyObject *obj)\n{\n    NULLABLE(obj);\n    return PyLong_FromLong(PyList_CheckExact(obj));\n}\n\nstatic PyObject *\nlist_new(PyObject* Py_UNUSED(module), PyObject *obj)\n{\n    return PyList_New(PyLong_AsSsize_t(obj));\n}\n\nstatic PyObject *\nlist_size(PyObject *Py_UNUSED(module), PyObject *obj)\n{\n    NULLABLE(obj);\n    RETURN_SIZE(PyList_Size(obj));\n}\n\nstatic PyObject *\nlist_get_size(PyObject *Py_UNUSED(module), PyObject *obj)\n{\n    NULLABLE(obj);\n    RETURN_SIZE(PyList_GET_SIZE(obj));\n}\n\nstatic PyObject *\nlist_getitem(PyObject *Py_UNUSED(module), PyObject *args)\n{\n    PyObject *obj;\n    Py_ssize_t i;\n    if (!PyArg_ParseTuple(args, \"On\", &obj, &i)) {\n        return NULL;\n    }\n    NULLABLE(obj);\n    return Py_XNewRef(PyList_GetItem(obj, i));\n}\n\nstatic PyObject *\nlist_get_item(PyObject *Py_UNUSED(module), PyObject *args)\n{\n    PyObject *obj;\n    Py_ssize_t i;\n    if (!PyArg_ParseTuple(args, \"On\", &obj, &i)) {\n        return NULL;\n    }\n    NULLABLE(obj);\n    return Py_XNewRef(PyList_GET_ITEM(obj, i));\n}\n\nstatic PyObject *\nlist_setitem(PyObject *Py_UNUSED(module), PyObject *args)\n{\n    PyObject *obj, *value;\n    Py_ssize_t i;\n    if (!PyArg_ParseTuple(args, \"OnO\", &obj, &i, &value)) {\n        return NULL;\n    }\n    NULLABLE(obj);\n    NULLABLE(value);\n    RETURN_INT(PyList_SetItem(obj, i, Py_XNewRef(value)));\n\n}\n\nstatic PyObject *\nlist_set_item(PyObject *Py_UNUSED(module), PyObject *args)\n{\n    PyObject *obj, *value;\n    Py_ssize_t i;\n    if (!PyArg_ParseTuple(args, \"OnO\", &obj, &i, &value)) {\n        return NULL;\n    }\n    NULLABLE(obj);\n    NULLABLE(value);\n    PyList_SET_ITEM(obj, i, Py_XNewRef(value));\n    Py_RETURN_NONE;\n\n}\n\nstatic PyObject *\nlist_insert(PyObject *Py_UNUSED(module), PyObject *args)\n{\n    PyObject *obj, *value;\n    Py_ssize_t where;\n    if (!PyArg_ParseTuple(args, \"OnO\", &obj, &where, &value)) {\n        return NULL;\n    }\n    NULLABLE(obj);\n    NULLABLE(value);\n    RETURN_INT(PyList_Insert(obj, where, Py_XNewRef(value)));\n\n}\n\nstatic PyObject *\nlist_append(PyObject *Py_UNUSED(module), PyObject *args)\n{\n    PyObject *obj, *value;\n    if (!PyArg_ParseTuple(args, \"OO\", &obj, &value)) {\n        return NULL;\n    }\n    NULLABLE(obj);\n    NULLABLE(value);\n    RETURN_INT(PyList_Append(obj, value));\n}\n\nstatic PyObject *\nlist_getslice(PyObject *Py_UNUSED(module), PyObject *args)\n{\n    PyObject *obj;\n    Py_ssize_t ilow, ihigh;\n    if (!PyArg_ParseTuple(args, \"Onn\", &obj, &ilow, &ihigh)) {\n        return NULL;\n    }\n    NULLABLE(obj);\n    return PyList_GetSlice(obj, ilow, ihigh);\n\n}\n\nstatic PyObject *\nlist_setslice(PyObject *Py_UNUSED(module), PyObject *args)\n{\n    PyObject *obj, *value;\n    Py_ssize_t ilow, ihigh;\n    if (!PyArg_ParseTuple(args, \"OnnO\", &obj, &ilow, &ihigh, &value)) {\n        return NULL;\n    }\n    NULLABLE(obj);\n    NULLABLE(value);\n    RETURN_INT(PyList_SetSlice(obj, ilow, ihigh, value));\n}\n\nstatic PyObject *\nlist_sort(PyObject* Py_UNUSED(module), PyObject *obj)\n{\n    NULLABLE(obj);\n    RETURN_INT(PyList_Sort(obj));\n}\n\nstatic PyObject *\nlist_reverse(PyObject* Py_UNUSED(module), PyObject *obj)\n{\n    NULLABLE(obj);\n    RETURN_INT(PyList_Reverse(obj));\n}\n\nstatic PyObject *\nlist_astuple(PyObject* Py_UNUSED(module), PyObject *obj)\n{\n    NULLABLE(obj);\n    return PyList_AsTuple(obj);\n}\n\n\n\n\nstatic PyMethodDef test_methods[] = {\n    {\"list_check\", list_check, METH_O},\n    {\"list_check_exact\", list_check_exact, METH_O},\n    {\"list_new\", list_new, METH_O},\n    {\"list_size\", list_size, METH_O},\n    {\"list_get_size\", list_get_size, METH_O},\n    {\"list_getitem\", list_getitem, METH_VARARGS},\n    {\"list_get_item\", list_get_item, METH_VARARGS},\n    {\"list_setitem\", list_setitem, METH_VARARGS},\n    {\"list_set_item\", list_set_item, METH_VARARGS},\n    {\"list_insert\", list_insert, METH_VARARGS},\n    {\"list_append\", list_append, METH_VARARGS},\n    {\"list_getslice\", list_getslice, METH_VARARGS},\n    {\"list_setslice\", list_setslice, METH_VARARGS},\n    {\"list_sort\", list_sort, METH_O},\n    {\"list_reverse\", list_reverse, METH_O},\n    {\"list_astuple\", list_astuple, METH_O},\n    {NULL},\n};\n\nint\n_PyTestCapi_Init_List(PyObject *m)\n{\n    if (PyModule_AddFunctions(m, test_methods) < 0) {\n        return -1;\n    }\n\n    return 0;\n}\n"},
                          "sourceLanguage": "c"},
                         {"location": {"uri": "./Include/object.h",
                                       "uriBaseId": "PWD"},
                          "contents": {"text": "#ifndef Py_OBJECT_H\n#define Py_OBJECT_H\n#ifdef __cplusplus\nextern \"C\" {\n#endif\n\n\n/* Object and type object interface */\n\n/*\nObjects are structures allocated on the heap.  Special rules apply to\nthe use of objects to ensure they are properly garbage-collected.\nObjects are never allocated statically or on the stack; they must be\naccessed through special macros and functions only.  (Type objects are\nexceptions to the first rule; the standard types are represented by\nstatically initialized type objects, although work on type/class unification\nfor Python 2.2 made it possible to have heap-allocated type objects too).\n\nAn object has a 'reference count' that is increased or decreased when a\npointer to the object is copied or deleted; when the reference count\nreaches zero there are no references to the object left and it can be\nremoved from the heap.\n\nAn object has a 'type' that determines what it represents and what kind\nof data it contains.  An object's type is fixed when it is created.\nTypes themselves are represented as objects; an object contains a\npointer to the corresponding type object.  The type itself has a type\npointer pointing to the object representing the type 'type', which\ncontains a pointer to itself!.\n\nObjects do not float around in memory; once allocated an object keeps\nthe same size and address.  Objects that must hold variable-size data\ncan contain pointers to variable-size parts of the object.  Not all\nobjects of the same type have the same size; but the size cannot change\nafter allocation.  (These restrictions are made so a reference to an\nobject can be simply a pointer -- moving an object would require\nupdating all the pointers, and changing an object's size would require\nmoving it if there was another object right next to it.)\n\nObjects are always accessed through pointers of the type 'PyObject *'.\nThe type 'PyObject' is a structure that only contains the reference count\nand the type pointer.  The actual memory allocated for an object\ncontains other data that can only be accessed after casting the pointer\nto a pointer to a longer structure type.  This longer type must start\nwith the reference count and type fields; the macro PyObject_HEAD should be\nused for this (to accommodate for future changes).  The implementation\nof a particular object type can cast the object pointer to the proper\ntype and back.\n\nA standard interface exists for objects that contain an array of items\nwhose size is determined when the object is allocated.\n*/\n\n#include \"pystats.h\"\n\n/* Py_DEBUG implies Py_REF_DEBUG. */\n#if defined(Py_DEBUG) && !defined(Py_REF_DEBUG)\n#  define Py_REF_DEBUG\n#endif\n\n#if defined(Py_LIMITED_API) && defined(Py_TRACE_REFS)\n#  error Py_LIMITED_API is incompatible with Py_TRACE_REFS\n#endif\n\n#ifdef Py_TRACE_REFS\n/* Define pointers to support a doubly-linked list of all live heap objects. */\n#define _PyObject_HEAD_EXTRA            \\\n    PyObject *_ob_next;           \\\n    PyObject *_ob_prev;\n\n#define _PyObject_EXTRA_INIT _Py_NULL, _Py_NULL,\n\n#else\n#  define _PyObject_HEAD_EXTRA\n#  define _PyObject_EXTRA_INIT\n#endif\n\n/* PyObject_HEAD defines the initial segment of every PyObject. */\n#define PyObject_HEAD                   PyObject ob_base;\n\n/*\nImmortalization:\n\nThe following indicates the immortalization strategy depending on the amount\nof available bits in the reference count field. All strategies are backwards\ncompatible but the specific reference count value or immortalization check\nmight change depending on the specializations for the underlying system.\n\nProper deallocation of immortal instances requires distinguishing between\nstatically allocated immortal instances vs those promoted by the runtime to be\nimmortal. The latter should be the only instances that require\ncleanup during runtime finalization.\n*/\n\n#if SIZEOF_VOID_P > 4\n/*\nIn 64+ bit systems, an object will be marked as immortal by setting all of the\nlower 32 bits of the reference count field, which is equal to: 0xFFFFFFFF\n\nUsing the lower 32 bits makes the value backwards compatible by allowing\nC-Extensions without the updated checks in Py_INCREF and Py_DECREF to safely\nincrease and decrease the objects reference count. The object would lose its\nimmortality, but the execution would still be correct.\n\nReference count increases will use saturated arithmetic, taking advantage of\nhaving all the lower 32 bits set, which will avoid the reference count to go\nbeyond the refcount limit. Immortality checks for reference count decreases will\nbe done by checking the bit sign flag in the lower 32 bits.\n*/\n#define _Py_IMMORTAL_REFCNT UINT_MAX\n\n#else\n/*\nIn 32 bit systems, an object will be marked as immortal by setting all of the\nlower 30 bits of the reference count field, which is equal to: 0x3FFFFFFF\n\nUsing the lower 30 bits makes the value backwards compatible by allowing\nC-Extensions without the updated checks in Py_INCREF and Py_DECREF to safely\nincrease and decrease the objects reference count. The object would lose its\nimmortality, but the execution would still be correct.\n\nReference count increases and decreases will first go through an immortality\ncheck by comparing the reference count field to the immortality reference count.\n*/\n#define _Py_IMMORTAL_REFCNT (UINT_MAX >> 2)\n#endif\n\n// Make all internal uses of PyObject_HEAD_INIT immortal while preserving the\n// C-API expectation that the refcnt will be set to 1.\n#ifdef Py_BUILD_CORE\n#define PyObject_HEAD_INIT(type)    \\\n    {                               \\\n        _PyObject_EXTRA_INIT        \\\n        { _Py_IMMORTAL_REFCNT },    \\\n        (type)                      \\\n    },\n#else\n#define PyObject_HEAD_INIT(type) \\\n    {                            \\\n        _PyObject_EXTRA_INIT     \\\n        { 1 },                   \\\n        (type)                   \\\n    },\n#endif /* Py_BUILD_CORE */\n\n#define PyVarObject_HEAD_INIT(type, size) \\\n    {                                     \\\n        PyObject_HEAD_INIT(type)          \\\n        (size)                            \\\n    },\n\n/* PyObject_VAR_HEAD defines the initial segment of all variable-size\n * container objects.  These end with a declaration of an array with 1\n * element, but enough space is malloc'ed so that the array actually\n * has room for ob_size elements.  Note that ob_size is an element count,\n * not necessarily a byte count.\n */\n#define PyObject_VAR_HEAD      PyVarObject ob_base;\n#define Py_INVALID_SIZE (Py_ssize_t)-1\n\n/* Nothing is actually declared to be a PyObject, but every pointer to\n * a Python object can be cast to a PyObject*.  This is inheritance built\n * by hand.  Similarly every pointer to a variable-size Python object can,\n * in addition, be cast to PyVarObject*.\n */\nstruct _object {\n    _PyObject_HEAD_EXTRA\n\n#if (defined(__GNUC__) || defined(__clang__)) \\\n        && !(defined __STDC_VERSION__ && __STDC_VERSION__ >= 201112L)\n    // On C99 and older, anonymous union is a GCC and clang extension\n    __extension__\n#endif\n#ifdef _MSC_VER\n    // Ignore MSC warning C4201: \"nonstandard extension used:\n    // nameless struct/union\"\n    __pragma(warning(push))\n    __pragma(warning(disable: 4201))\n#endif\n    union {\n       Py_ssize_t ob_refcnt;\n#if SIZEOF_VOID_P > 4\n       PY_UINT32_T ob_refcnt_split[2];\n#endif\n    };\n#ifdef _MSC_VER\n    __pragma(warning(pop))\n#endif\n\n    PyTypeObject *ob_type;\n};\n\n/* Cast argument to PyObject* type. */\n#define _PyObject_CAST(op) _Py_CAST(PyObject*, (op))\n\ntypedef struct {\n    PyObject ob_base;\n    Py_ssize_t ob_size; /* Number of items in variable part */\n} PyVarObject;\n\n/* Cast argument to PyVarObject* type. */\n#define _PyVarObject_CAST(op) _Py_CAST(PyVarObject*, (op))\n\n\n// Test if the 'x' object is the 'y' object, the same as \"x is y\" in Python.\nPyAPI_FUNC(int) Py_Is(PyObject *x, PyObject *y);\n#define Py_Is(x, y) ((x) == (y))\n\n\nstatic inline Py_ssize_t Py_REFCNT(PyObject *ob) {\n    return ob->ob_refcnt;\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_REFCNT(ob) Py_REFCNT(_PyObject_CAST(ob))\n#endif\n\n\n// bpo-39573: The Py_SET_TYPE() function must be used to set an object type.\nstatic inline PyTypeObject* Py_TYPE(PyObject *ob) {\n    return ob->ob_type;\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_TYPE(ob) Py_TYPE(_PyObject_CAST(ob))\n#endif\n\nPyAPI_DATA(PyTypeObject) PyLong_Type;\nPyAPI_DATA(PyTypeObject) PyBool_Type;\n\n// bpo-39573: The Py_SET_SIZE() function must be used to set an object size.\nstatic inline Py_ssize_t Py_SIZE(PyObject *ob) {\n    assert(ob->ob_type != &PyLong_Type);\n    assert(ob->ob_type != &PyBool_Type);\n    return  _PyVarObject_CAST(ob)->ob_size;\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_SIZE(ob) Py_SIZE(_PyObject_CAST(ob))\n#endif\n\nstatic inline Py_ALWAYS_INLINE int _Py_IsImmortal(PyObject *op)\n{\n#if SIZEOF_VOID_P > 4\n    return _Py_CAST(PY_INT32_T, op->ob_refcnt) < 0;\n#else\n    return op->ob_refcnt == _Py_IMMORTAL_REFCNT;\n#endif\n}\n#define _Py_IsImmortal(op) _Py_IsImmortal(_PyObject_CAST(op))\n\nstatic inline int Py_IS_TYPE(PyObject *ob, PyTypeObject *type) {\n    return Py_TYPE(ob) == type;\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_IS_TYPE(ob, type) Py_IS_TYPE(_PyObject_CAST(ob), (type))\n#endif\n\n\nstatic inline void Py_SET_REFCNT(PyObject *ob, Py_ssize_t refcnt) {\n    // This immortal check is for code that is unaware of immortal objects.\n    // The runtime tracks these objects and we should avoid as much\n    // as possible having extensions inadvertently change the refcnt\n    // of an immortalized object.\n    if (_Py_IsImmortal(ob)) {\n        return;\n    }\n    ob->ob_refcnt = refcnt;\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_SET_REFCNT(ob, refcnt) Py_SET_REFCNT(_PyObject_CAST(ob), (refcnt))\n#endif\n\n\nstatic inline void Py_SET_TYPE(PyObject *ob, PyTypeObject *type) {\n    ob->ob_type = type;\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_SET_TYPE(ob, type) Py_SET_TYPE(_PyObject_CAST(ob), type)\n#endif\n\nstatic inline void Py_SET_SIZE(PyVarObject *ob, Py_ssize_t size) {\n    assert(ob->ob_base.ob_type != &PyLong_Type);\n    assert(ob->ob_base.ob_type != &PyBool_Type);\n    ob->ob_size = size;\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_SET_SIZE(ob, size) Py_SET_SIZE(_PyVarObject_CAST(ob), (size))\n#endif\n\n\n/*\nType objects contain a string containing the type name (to help somewhat\nin debugging), the allocation parameters (see PyObject_New() and\nPyObject_NewVar()),\nand methods for accessing objects of the type.  Methods are optional, a\nnil pointer meaning that particular kind of access is not available for\nthis type.  The Py_DECREF() macro uses the tp_dealloc method without\nchecking for a nil pointer; it should always be implemented except if\nthe implementation can guarantee that the reference count will never\nreach zero (e.g., for statically allocated type objects).\n\nNB: the methods for certain type groups are now contained in separate\nmethod blocks.\n*/\n\ntypedef PyObject * (*unaryfunc)(PyObject *);\ntypedef PyObject * (*binaryfunc)(PyObject *, PyObject *);\ntypedef PyObject * (*ternaryfunc)(PyObject *, PyObject *, PyObject *);\ntypedef int (*inquiry)(PyObject *);\ntypedef Py_ssize_t (*lenfunc)(PyObject *);\ntypedef PyObject *(*ssizeargfunc)(PyObject *, Py_ssize_t);\ntypedef PyObject *(*ssizessizeargfunc)(PyObject *, Py_ssize_t, Py_ssize_t);\ntypedef int(*ssizeobjargproc)(PyObject *, Py_ssize_t, PyObject *);\ntypedef int(*ssizessizeobjargproc)(PyObject *, Py_ssize_t, Py_ssize_t, PyObject *);\ntypedef int(*objobjargproc)(PyObject *, PyObject *, PyObject *);\n\ntypedef int (*objobjproc)(PyObject *, PyObject *);\ntypedef int (*visitproc)(PyObject *, void *);\ntypedef int (*traverseproc)(PyObject *, visitproc, void *);\n\n\ntypedef void (*freefunc)(void *);\ntypedef void (*destructor)(PyObject *);\ntypedef PyObject *(*getattrfunc)(PyObject *, char *);\ntypedef PyObject *(*getattrofunc)(PyObject *, PyObject *);\ntypedef int (*setattrfunc)(PyObject *, char *, PyObject *);\ntypedef int (*setattrofunc)(PyObject *, PyObject *, PyObject *);\ntypedef PyObject *(*reprfunc)(PyObject *);\ntypedef Py_hash_t (*hashfunc)(PyObject *);\ntypedef PyObject *(*richcmpfunc) (PyObject *, PyObject *, int);\ntypedef PyObject *(*getiterfunc) (PyObject *);\ntypedef PyObject *(*iternextfunc) (PyObject *);\ntypedef PyObject *(*descrgetfunc) (PyObject *, PyObject *, PyObject *);\ntypedef int (*descrsetfunc) (PyObject *, PyObject *, PyObject *);\ntypedef int (*initproc)(PyObject *, PyObject *, PyObject *);\ntypedef PyObject *(*newfunc)(PyTypeObject *, PyObject *, PyObject *);\ntypedef PyObject *(*allocfunc)(PyTypeObject *, Py_ssize_t);\n\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x030c0000 // 3.12\ntypedef PyObject *(*vectorcallfunc)(PyObject *callable, PyObject *const *args,\n                                    size_t nargsf, PyObject *kwnames);\n#endif\n\ntypedef struct{\n    int slot;    /* slot id, see below */\n    void *pfunc; /* function pointer */\n} PyType_Slot;\n\ntypedef struct{\n    const char* name;\n    int basicsize;\n    int itemsize;\n    unsigned int flags;\n    PyType_Slot *slots; /* terminated by slot==0. */\n} PyType_Spec;\n\nPyAPI_FUNC(PyObject*) PyType_FromSpec(PyType_Spec*);\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x03030000\nPyAPI_FUNC(PyObject*) PyType_FromSpecWithBases(PyType_Spec*, PyObject*);\n#endif\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x03040000\nPyAPI_FUNC(void*) PyType_GetSlot(PyTypeObject*, int);\n#endif\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x03090000\nPyAPI_FUNC(PyObject*) PyType_FromModuleAndSpec(PyObject *, PyType_Spec *, PyObject *);\nPyAPI_FUNC(PyObject *) PyType_GetModule(PyTypeObject *);\nPyAPI_FUNC(void *) PyType_GetModuleState(PyTypeObject *);\n#endif\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x030B0000\nPyAPI_FUNC(PyObject *) PyType_GetName(PyTypeObject *);\nPyAPI_FUNC(PyObject *) PyType_GetQualName(PyTypeObject *);\n#endif\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x030C0000\nPyAPI_FUNC(PyObject *) PyType_FromMetaclass(PyTypeObject*, PyObject*, PyType_Spec*, PyObject*);\nPyAPI_FUNC(void *) PyObject_GetTypeData(PyObject *obj, PyTypeObject *cls);\nPyAPI_FUNC(Py_ssize_t) PyType_GetTypeDataSize(PyTypeObject *cls);\n#endif\n\n/* Generic type check */\nPyAPI_FUNC(int) PyType_IsSubtype(PyTypeObject *, PyTypeObject *);\n\nstatic inline int PyObject_TypeCheck(PyObject *ob, PyTypeObject *type) {\n    return Py_IS_TYPE(ob, type) || PyType_IsSubtype(Py_TYPE(ob), type);\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define PyObject_TypeCheck(ob, type) PyObject_TypeCheck(_PyObject_CAST(ob), (type))\n#endif\n\nPyAPI_DATA(PyTypeObject) PyType_Type; /* built-in 'type' */\nPyAPI_DATA(PyTypeObject) PyBaseObject_Type; /* built-in 'object' */\nPyAPI_DATA(PyTypeObject) PySuper_Type; /* built-in 'super' */\n\nPyAPI_FUNC(unsigned long) PyType_GetFlags(PyTypeObject*);\n\nPyAPI_FUNC(int) PyType_Ready(PyTypeObject *);\nPyAPI_FUNC(PyObject *) PyType_GenericAlloc(PyTypeObject *, Py_ssize_t);\nPyAPI_FUNC(PyObject *) PyType_GenericNew(PyTypeObject *,\n                                               PyObject *, PyObject *);\nPyAPI_FUNC(unsigned int) PyType_ClearCache(void);\nPyAPI_FUNC(void) PyType_Modified(PyTypeObject *);\n\n/* Generic operations on objects */\nPyAPI_FUNC(PyObject *) PyObject_Repr(PyObject *);\nPyAPI_FUNC(PyObject *) PyObject_Str(PyObject *);\nPyAPI_FUNC(PyObject *) PyObject_ASCII(PyObject *);\nPyAPI_FUNC(PyObject *) PyObject_Bytes(PyObject *);\nPyAPI_FUNC(PyObject *) PyObject_RichCompare(PyObject *, PyObject *, int);\nPyAPI_FUNC(int) PyObject_RichCompareBool(PyObject *, PyObject *, int);\nPyAPI_FUNC(PyObject *) PyObject_GetAttrString(PyObject *, const char *);\nPyAPI_FUNC(int) PyObject_SetAttrString(PyObject *, const char *, PyObject *);\nPyAPI_FUNC(int) PyObject_HasAttrString(PyObject *, const char *);\nPyAPI_FUNC(PyObject *) PyObject_GetAttr(PyObject *, PyObject *);\nPyAPI_FUNC(int) PyObject_SetAttr(PyObject *, PyObject *, PyObject *);\nPyAPI_FUNC(int) PyObject_HasAttr(PyObject *, PyObject *);\nPyAPI_FUNC(PyObject *) PyObject_SelfIter(PyObject *);\nPyAPI_FUNC(PyObject *) PyObject_GenericGetAttr(PyObject *, PyObject *);\nPyAPI_FUNC(int) PyObject_GenericSetAttr(PyObject *, PyObject *, PyObject *);\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x03030000\nPyAPI_FUNC(int) PyObject_GenericSetDict(PyObject *, PyObject *, void *);\n#endif\nPyAPI_FUNC(Py_hash_t) PyObject_Hash(PyObject *);\nPyAPI_FUNC(Py_hash_t) PyObject_HashNotImplemented(PyObject *);\nPyAPI_FUNC(int) PyObject_IsTrue(PyObject *);\nPyAPI_FUNC(int) PyObject_Not(PyObject *);\nPyAPI_FUNC(int) PyCallable_Check(PyObject *);\nPyAPI_FUNC(void) PyObject_ClearWeakRefs(PyObject *);\n\n/* PyObject_Dir(obj) acts like Python builtins.dir(obj), returning a\n   list of strings.  PyObject_Dir(NULL) is like builtins.dir(),\n   returning the names of the current locals.  In this case, if there are\n   no current locals, NULL is returned, and PyErr_Occurred() is false.\n*/\nPyAPI_FUNC(PyObject *) PyObject_Dir(PyObject *);\n\n/* Pickle support. */\n#ifndef Py_LIMITED_API\nPyAPI_FUNC(PyObject *) _PyObject_GetState(PyObject *);\n#endif\n\n\n/* Helpers for printing recursive container types */\nPyAPI_FUNC(int) Py_ReprEnter(PyObject *);\nPyAPI_FUNC(void) Py_ReprLeave(PyObject *);\n\n/* Flag bits for printing: */\n#define Py_PRINT_RAW    1       /* No string quotes etc. */\n\n/*\nType flags (tp_flags)\n\nThese flags are used to change expected features and behavior for a\nparticular type.\n\nArbitration of the flag bit positions will need to be coordinated among\nall extension writers who publicly release their extensions (this will\nbe fewer than you might expect!).\n\nMost flags were removed as of Python 3.0 to make room for new flags.  (Some\nflags are not for backwards compatibility but to indicate the presence of an\noptional feature; these flags remain of course.)\n\nType definitions should use Py_TPFLAGS_DEFAULT for their tp_flags value.\n\nCode can use PyType_HasFeature(type_ob, flag_value) to test whether the\ngiven type object has a specified feature.\n*/\n\n#ifndef Py_LIMITED_API\n\n/* Track types initialized using _PyStaticType_InitBuiltin(). */\n#define _Py_TPFLAGS_STATIC_BUILTIN (1 << 1)\n\n/* Placement of weakref pointers are managed by the VM, not by the type.\n * The VM will automatically set tp_weaklistoffset.\n */\n#define Py_TPFLAGS_MANAGED_WEAKREF (1 << 3)\n\n/* Placement of dict (and values) pointers are managed by the VM, not by the type.\n * The VM will automatically set tp_dictoffset.\n */\n#define Py_TPFLAGS_MANAGED_DICT (1 << 4)\n\n#define Py_TPFLAGS_PREHEADER (Py_TPFLAGS_MANAGED_WEAKREF | Py_TPFLAGS_MANAGED_DICT)\n\n/* Set if instances of the type object are treated as sequences for pattern matching */\n#define Py_TPFLAGS_SEQUENCE (1 << 5)\n/* Set if instances of the type object are treated as mappings for pattern matching */\n#define Py_TPFLAGS_MAPPING (1 << 6)\n#endif\n\n/* Disallow creating instances of the type: set tp_new to NULL and don't create\n * the \"__new__\" key in the type dictionary. */\n#define Py_TPFLAGS_DISALLOW_INSTANTIATION (1UL << 7)\n\n/* Set if the type object is immutable: type attributes cannot be set nor deleted */\n#define Py_TPFLAGS_IMMUTABLETYPE (1UL << 8)\n\n/* Set if the type object is dynamically allocated */\n#define Py_TPFLAGS_HEAPTYPE (1UL << 9)\n\n/* Set if the type allows subclassing */\n#define Py_TPFLAGS_BASETYPE (1UL << 10)\n\n/* Set if the type implements the vectorcall protocol (PEP 590) */\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x030C0000\n#define Py_TPFLAGS_HAVE_VECTORCALL (1UL << 11)\n#ifndef Py_LIMITED_API\n// Backwards compatibility alias for API that was provisional in Python 3.8\n#define _Py_TPFLAGS_HAVE_VECTORCALL Py_TPFLAGS_HAVE_VECTORCALL\n#endif\n#endif\n\n/* Set if the type is 'ready' -- fully initialized */\n#define Py_TPFLAGS_READY (1UL << 12)\n\n/* Set while the type is being 'readied', to prevent recursive ready calls */\n#define Py_TPFLAGS_READYING (1UL << 13)\n\n/* Objects support garbage collection (see objimpl.h) */\n#define Py_TPFLAGS_HAVE_GC (1UL << 14)\n\n/* These two bits are preserved for Stackless Python, next after this is 17 */\n#ifdef STACKLESS\n#define Py_TPFLAGS_HAVE_STACKLESS_EXTENSION (3UL << 15)\n#else\n#define Py_TPFLAGS_HAVE_STACKLESS_EXTENSION 0\n#endif\n\n/* Objects behave like an unbound method */\n#define Py_TPFLAGS_METHOD_DESCRIPTOR (1UL << 17)\n\n/* Object has up-to-date type attribute cache */\n#define Py_TPFLAGS_VALID_VERSION_TAG  (1UL << 19)\n\n/* Type is abstract and cannot be instantiated */\n#define Py_TPFLAGS_IS_ABSTRACT (1UL << 20)\n\n// This undocumented flag gives certain built-ins their unique pattern-matching\n// behavior, which allows a single positional subpattern to match against the\n// subject itself (rather than a mapped attribute on it):\n#define _Py_TPFLAGS_MATCH_SELF (1UL << 22)\n\n/* Items (ob_size*tp_itemsize) are found at the end of an instance's memory */\n#define Py_TPFLAGS_ITEMS_AT_END (1UL << 23)\n\n/* These flags are used to determine if a type is a subclass. */\n#define Py_TPFLAGS_LONG_SUBCLASS        (1UL << 24)\n#define Py_TPFLAGS_LIST_SUBCLASS        (1UL << 25)\n#define Py_TPFLAGS_TUPLE_SUBCLASS       (1UL << 26)\n#define Py_TPFLAGS_BYTES_SUBCLASS       (1UL << 27)\n#define Py_TPFLAGS_UNICODE_SUBCLASS     (1UL << 28)\n#define Py_TPFLAGS_DICT_SUBCLASS        (1UL << 29)\n#define Py_TPFLAGS_BASE_EXC_SUBCLASS    (1UL << 30)\n#define Py_TPFLAGS_TYPE_SUBCLASS        (1UL << 31)\n\n#define Py_TPFLAGS_DEFAULT  ( \\\n                 Py_TPFLAGS_HAVE_STACKLESS_EXTENSION | \\\n                0)\n\n/* NOTE: Some of the following flags reuse lower bits (removed as part of the\n * Python 3.0 transition). */\n\n/* The following flags are kept for compatibility; in previous\n * versions they indicated presence of newer tp_* fields on the\n * type struct.\n * Starting with 3.8, binary compatibility of C extensions across\n * feature releases of Python is not supported anymore (except when\n * using the stable ABI, in which all classes are created dynamically,\n * using the interpreter's memory layout.)\n * Note that older extensions using the stable ABI set these flags,\n * so the bits must not be repurposed.\n */\n#define Py_TPFLAGS_HAVE_FINALIZE (1UL << 0)\n#define Py_TPFLAGS_HAVE_VERSION_TAG   (1UL << 18)\n\n\n/*\nThe macros Py_INCREF(op) and Py_DECREF(op) are used to increment or decrement\nreference counts.  Py_DECREF calls the object's deallocator function when\nthe refcount falls to 0; for\nobjects that don't contain references to other objects or heap memory\nthis can be the standard function free().  Both macros can be used\nwherever a void expression is allowed.  The argument must not be a\nNULL pointer.  If it may be NULL, use Py_XINCREF/Py_XDECREF instead.\nThe macro _Py_NewReference(op) initialize reference counts to 1, and\nin special builds (Py_REF_DEBUG, Py_TRACE_REFS) performs additional\nbookkeeping appropriate to the special build.\n\nWe assume that the reference count field can never overflow; this can\nbe proven when the size of the field is the same as the pointer size, so\nwe ignore the possibility.  Provided a C int is at least 32 bits (which\nis implicitly assumed in many parts of this code), that's enough for\nabout 2**31 references to an object.\n\nXXX The following became out of date in Python 2.2, but I'm not sure\nXXX what the full truth is now.  Certainly, heap-allocated type objects\nXXX can and should be deallocated.\nType objects should never be deallocated; the type pointer in an object\nis not considered to be a reference to the type object, to save\ncomplications in the deallocation function.  (This is actually a\ndecision that's up to the implementer of each new type so if you want,\nyou can count such references to the type object.)\n*/\n\n#if defined(Py_REF_DEBUG) && !defined(Py_LIMITED_API)\nPyAPI_FUNC(void) _Py_NegativeRefcount(const char *filename, int lineno,\n                                      PyObject *op);\nPyAPI_FUNC(void) _Py_INCREF_IncRefTotal(void);\nPyAPI_FUNC(void) _Py_DECREF_DecRefTotal(void);\n#endif  // Py_REF_DEBUG && !Py_LIMITED_API\n\nPyAPI_FUNC(void) _Py_Dealloc(PyObject *);\n\n/*\nThese are provided as conveniences to Python runtime embedders, so that\nthey can have object code that is not dependent on Python compilation flags.\n*/\nPyAPI_FUNC(void) Py_IncRef(PyObject *);\nPyAPI_FUNC(void) Py_DecRef(PyObject *);\n\n// Similar to Py_IncRef() and Py_DecRef() but the argument must be non-NULL.\n// Private functions used by Py_INCREF() and Py_DECREF().\nPyAPI_FUNC(void) _Py_IncRef(PyObject *);\nPyAPI_FUNC(void) _Py_DecRef(PyObject *);\n\nstatic inline Py_ALWAYS_INLINE void Py_INCREF(PyObject *op)\n{\n#if defined(Py_LIMITED_API) && (Py_LIMITED_API+0 >= 0x030c0000 || defined(Py_REF_DEBUG))\n    // Stable ABI implements Py_INCREF() as a function call on limited C API\n    // version 3.12 and newer, and on Python built in debug mode. _Py_IncRef()\n    // was added to Python 3.10.0a7, use Py_IncRef() on older Python versions.\n    // Py_IncRef() accepts NULL whereas _Py_IncRef() doesn't.\n#  if Py_LIMITED_API+0 >= 0x030a00A7\n    _Py_IncRef(op);\n#  else\n    Py_IncRef(op);\n#  endif\n#else\n    // Non-limited C API and limited C API for Python 3.9 and older access\n    // directly PyObject.ob_refcnt.\n#if SIZEOF_VOID_P > 4\n    // Portable saturated add, branching on the carry flag and set low bits\n    PY_UINT32_T cur_refcnt = op->ob_refcnt_split[PY_BIG_ENDIAN];\n    PY_UINT32_T new_refcnt = cur_refcnt + 1;\n    if (new_refcnt == 0) {\n        return;\n    }\n    op->ob_refcnt_split[PY_BIG_ENDIAN] = new_refcnt;\n#else\n    // Explicitly check immortality against the immortal value\n    if (_Py_IsImmortal(op)) {\n        return;\n    }\n    op->ob_refcnt++;\n#endif\n    _Py_INCREF_STAT_INC();\n#ifdef Py_REF_DEBUG\n    _Py_INCREF_IncRefTotal();\n#endif\n#endif\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_INCREF(op) Py_INCREF(_PyObject_CAST(op))\n#endif\n\n#if defined(Py_LIMITED_API) && (Py_LIMITED_API+0 >= 0x030c0000 || defined(Py_REF_DEBUG))\n// Stable ABI implements Py_DECREF() as a function call on limited C API\n// version 3.12 and newer, and on Python built in debug mode. _Py_DecRef() was\n// added to Python 3.10.0a7, use Py_DecRef() on older Python versions.\n// Py_DecRef() accepts NULL whereas _Py_IncRef() doesn't.\nstatic inline void Py_DECREF(PyObject *op) {\n#  if Py_LIMITED_API+0 >= 0x030a00A7\n    _Py_DecRef(op);\n#  else\n    Py_DecRef(op);\n#  endif\n}\n#define Py_DECREF(op) Py_DECREF(_PyObject_CAST(op))\n\n#elif defined(Py_REF_DEBUG)\nstatic inline void Py_DECREF(const char *filename, int lineno, PyObject *op)\n{\n    if (op->ob_refcnt <= 0) {\n        _Py_NegativeRefcount(filename, lineno, op);\n    }\n    if (_Py_IsImmortal(op)) {\n        return;\n    }\n    _Py_DECREF_STAT_INC();\n    _Py_DECREF_DecRefTotal();\n    if (--op->ob_refcnt == 0) {\n        _Py_Dealloc(op);\n    }\n}\n#define Py_DECREF(op) Py_DECREF(__FILE__, __LINE__, _PyObject_CAST(op))\n\n#else\nstatic inline Py_ALWAYS_INLINE void Py_DECREF(PyObject *op)\n{\n    // Non-limited C API and limited C API for Python 3.9 and older access\n    // directly PyObject.ob_refcnt.\n    if (_Py_IsImmortal(op)) {\n        return;\n    }\n    _Py_DECREF_STAT_INC();\n    if (--op->ob_refcnt == 0) {\n        _Py_Dealloc(op);\n    }\n}\n#define Py_DECREF(op) Py_DECREF(_PyObject_CAST(op))\n#endif\n\n\n/* Safely decref `op` and set `op` to NULL, especially useful in tp_clear\n * and tp_dealloc implementations.\n *\n * Note that \"the obvious\" code can be deadly:\n *\n *     Py_XDECREF(op);\n *     op = NULL;\n *\n * Typically, `op` is something like self->containee, and `self` is done\n * using its `containee` member.  In the code sequence above, suppose\n * `containee` is non-NULL with a refcount of 1.  Its refcount falls to\n * 0 on the first line, which can trigger an arbitrary amount of code,\n * possibly including finalizers (like __del__ methods or weakref callbacks)\n * coded in Python, which in turn can release the GIL and allow other threads\n * to run, etc.  Such code may even invoke methods of `self` again, or cause\n * cyclic gc to trigger, but-- oops! --self->containee still points to the\n * object being torn down, and it may be in an insane state while being torn\n * down.  This has in fact been a rich historic source of miserable (rare &\n * hard-to-diagnose) segfaulting (and other) bugs.\n *\n * The safe way is:\n *\n *      Py_CLEAR(op);\n *\n * That arranges to set `op` to NULL _before_ decref'ing, so that any code\n * triggered as a side-effect of `op` getting torn down no longer believes\n * `op` points to a valid object.\n *\n * There are cases where it's safe to use the naive code, but they're brittle.\n * For example, if `op` points to a Python integer, you know that destroying\n * one of those can't cause problems -- but in part that relies on that\n * Python integers aren't currently weakly referencable.  Best practice is\n * to use Py_CLEAR() even if you can't think of a reason for why you need to.\n *\n * gh-98724: Use a temporary variable to only evaluate the macro argument once,\n * to avoid the duplication of side effects if the argument has side effects.\n *\n * gh-99701: If the PyObject* type is used with casting arguments to PyObject*,\n * the code can be miscompiled with strict aliasing because of type punning.\n * With strict aliasing, a compiler considers that two pointers of different\n * types cannot read or write the same memory which enables optimization\n * opportunities.\n *\n * If available, use _Py_TYPEOF() to use the 'op' type for temporary variables,\n * and so avoid type punning. Otherwise, use memcpy() which causes type erasure\n * and so prevents the compiler to reuse an old cached 'op' value after\n * Py_CLEAR().\n */\n#ifdef _Py_TYPEOF\n#define Py_CLEAR(op) \\\n    do { \\\n        _Py_TYPEOF(op)* _tmp_op_ptr = &(op); \\\n        _Py_TYPEOF(op) _tmp_old_op = (*_tmp_op_ptr); \\\n        if (_tmp_old_op != NULL) { \\\n            *_tmp_op_ptr = _Py_NULL; \\\n            Py_DECREF(_tmp_old_op); \\\n        } \\\n    } while (0)\n#else\n#define Py_CLEAR(op) \\\n    do { \\\n        PyObject **_tmp_op_ptr = _Py_CAST(PyObject**, &(op)); \\\n        PyObject *_tmp_old_op = (*_tmp_op_ptr); \\\n        if (_tmp_old_op != NULL) { \\\n            PyObject *_null_ptr = _Py_NULL; \\\n            memcpy(_tmp_op_ptr, &_null_ptr, sizeof(PyObject*)); \\\n            Py_DECREF(_tmp_old_op); \\\n        } \\\n    } while (0)\n#endif\n\n\n/* Function to use in case the object pointer can be NULL: */\nstatic inline void Py_XINCREF(PyObject *op)\n{\n    if (op != _Py_NULL) {\n        Py_INCREF(op);\n    }\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_XINCREF(op) Py_XINCREF(_PyObject_CAST(op))\n#endif\n\nstatic inline void Py_XDECREF(PyObject *op)\n{\n    if (op != _Py_NULL) {\n        Py_DECREF(op);\n    }\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_XDECREF(op) Py_XDECREF(_PyObject_CAST(op))\n#endif\n\n// Create a new strong reference to an object:\n// increment the reference count of the object and return the object.\nPyAPI_FUNC(PyObject*) Py_NewRef(PyObject *obj);\n\n// Similar to Py_NewRef(), but the object can be NULL.\nPyAPI_FUNC(PyObject*) Py_XNewRef(PyObject *obj);\n\nstatic inline PyObject* _Py_NewRef(PyObject *obj)\n{\n    Py_INCREF(obj);\n    return obj;\n}\n\nstatic inline PyObject* _Py_XNewRef(PyObject *obj)\n{\n    Py_XINCREF(obj);\n    return obj;\n}\n\n// Py_NewRef() and Py_XNewRef() are exported as functions for the stable ABI.\n// Names overridden with macros by static inline functions for best\n// performances.\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define Py_NewRef(obj) _Py_NewRef(_PyObject_CAST(obj))\n#  define Py_XNewRef(obj) _Py_XNewRef(_PyObject_CAST(obj))\n#else\n#  define Py_NewRef(obj) _Py_NewRef(obj)\n#  define Py_XNewRef(obj) _Py_XNewRef(obj)\n#endif\n\n\n/*\n_Py_NoneStruct is an object of undefined type which can be used in contexts\nwhere NULL (nil) is not suitable (since NULL often means 'error').\n\nDon't forget to apply Py_INCREF() when returning this value!!!\n*/\nPyAPI_DATA(PyObject) _Py_NoneStruct; /* Don't use this directly */\n#define Py_None (&_Py_NoneStruct)\n\n// Test if an object is the None singleton, the same as \"x is None\" in Python.\nPyAPI_FUNC(int) Py_IsNone(PyObject *x);\n#define Py_IsNone(x) Py_Is((x), Py_None)\n\n/* Macro for returning Py_None from a function */\n#define Py_RETURN_NONE return Py_None\n\n/*\nPy_NotImplemented is a singleton used to signal that an operation is\nnot implemented for a given type combination.\n*/\nPyAPI_DATA(PyObject) _Py_NotImplementedStruct; /* Don't use this directly */\n#define Py_NotImplemented (&_Py_NotImplementedStruct)\n\n/* Macro for returning Py_NotImplemented from a function */\n#define Py_RETURN_NOTIMPLEMENTED return Py_NotImplemented\n\n/* Rich comparison opcodes */\n#define Py_LT 0\n#define Py_LE 1\n#define Py_EQ 2\n#define Py_NE 3\n#define Py_GT 4\n#define Py_GE 5\n\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 >= 0x030A0000\n/* Result of calling PyIter_Send */\ntypedef enum {\n    PYGEN_RETURN = 0,\n    PYGEN_ERROR = -1,\n    PYGEN_NEXT = 1,\n} PySendResult;\n#endif\n\n/*\n * Macro for implementing rich comparisons\n *\n * Needs to be a macro because any C-comparable type can be used.\n */\n#define Py_RETURN_RICHCOMPARE(val1, val2, op)                               \\\n    do {                                                                    \\\n        switch (op) {                                                       \\\n        case Py_EQ: if ((val1) == (val2)) Py_RETURN_TRUE; Py_RETURN_FALSE;  \\\n        case Py_NE: if ((val1) != (val2)) Py_RETURN_TRUE; Py_RETURN_FALSE;  \\\n        case Py_LT: if ((val1) < (val2)) Py_RETURN_TRUE; Py_RETURN_FALSE;   \\\n        case Py_GT: if ((val1) > (val2)) Py_RETURN_TRUE; Py_RETURN_FALSE;   \\\n        case Py_LE: if ((val1) <= (val2)) Py_RETURN_TRUE; Py_RETURN_FALSE;  \\\n        case Py_GE: if ((val1) >= (val2)) Py_RETURN_TRUE; Py_RETURN_FALSE;  \\\n        default:                                                            \\\n            Py_UNREACHABLE();                                               \\\n        }                                                                   \\\n    } while (0)\n\n\n/*\nMore conventions\n================\n\nArgument Checking\n-----------------\n\nFunctions that take objects as arguments normally don't check for nil\narguments, but they do check the type of the argument, and return an\nerror if the function doesn't apply to the type.\n\nFailure Modes\n-------------\n\nFunctions may fail for a variety of reasons, including running out of\nmemory.  This is communicated to the caller in two ways: an error string\nis set (see errors.h), and the function result differs: functions that\nnormally return a pointer return NULL for failure, functions returning\nan integer return -1 (which could be a legal return value too!), and\nother functions return 0 for success and -1 for failure.\nCallers should always check for errors before using the result.  If\nan error was set, the caller must either explicitly clear it, or pass\nthe error on to its caller.\n\nReference Counts\n----------------\n\nIt takes a while to get used to the proper usage of reference counts.\n\nFunctions that create an object set the reference count to 1; such new\nobjects must be stored somewhere or destroyed again with Py_DECREF().\nSome functions that 'store' objects, such as PyTuple_SetItem() and\nPyList_SetItem(),\ndon't increment the reference count of the object, since the most\nfrequent use is to store a fresh object.  Functions that 'retrieve'\nobjects, such as PyTuple_GetItem() and PyDict_GetItemString(), also\ndon't increment\nthe reference count, since most frequently the object is only looked at\nquickly.  Thus, to retrieve an object and store it again, the caller\nmust call Py_INCREF() explicitly.\n\nNOTE: functions that 'consume' a reference count, like\nPyList_SetItem(), consume the reference even if the object wasn't\nsuccessfully stored, to simplify error handling.\n\nIt seems attractive to make other functions that take an object as\nargument consume a reference count; however, this may quickly get\nconfusing (even the current practice is already confusing).  Consider\nit carefully, it may save lots of calls to Py_INCREF() and Py_DECREF() at\ntimes.\n*/\n\n#ifndef Py_LIMITED_API\n#  define Py_CPYTHON_OBJECT_H\n#  include \"cpython/object.h\"\n#  undef Py_CPYTHON_OBJECT_H\n#endif\n\n\nstatic inline int\nPyType_HasFeature(PyTypeObject *type, unsigned long feature)\n{\n    unsigned long flags;\n#ifdef Py_LIMITED_API\n    // PyTypeObject is opaque in the limited C API\n    flags = PyType_GetFlags(type);\n#else\n    flags = type->tp_flags;\n#endif\n    return ((flags & feature) != 0);\n}\n\n#define PyType_FastSubclass(type, flag) PyType_HasFeature((type), (flag))\n\nstatic inline int PyType_Check(PyObject *op) {\n    return PyType_FastSubclass(Py_TYPE(op), Py_TPFLAGS_TYPE_SUBCLASS);\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define PyType_Check(op) PyType_Check(_PyObject_CAST(op))\n#endif\n\n#define _PyType_CAST(op) \\\n    (assert(PyType_Check(op)), _Py_CAST(PyTypeObject*, (op)))\n\nstatic inline int PyType_CheckExact(PyObject *op) {\n    return Py_IS_TYPE(op, &PyType_Type);\n}\n#if !defined(Py_LIMITED_API) || Py_LIMITED_API+0 < 0x030b0000\n#  define PyType_CheckExact(op) PyType_CheckExact(_PyObject_CAST(op))\n#endif\n\n#ifdef __cplusplus\n}\n#endif\n#endif   // !Py_OBJECT_H\n"},
                          "sourceLanguage": "c"},
                         {"location": {"uri": "./Include/cpython/listobject.h",
                                       "uriBaseId": "PWD"},
                          "contents": {"text": "#ifndef Py_CPYTHON_LISTOBJECT_H\n#  error \"this header file must not be included directly\"\n#endif\n\ntypedef struct {\n    PyObject_VAR_HEAD\n    /* Vector of pointers to list elements.  list[0] is ob_item[0], etc. */\n    PyObject **ob_item;\n\n    /* ob_item contains space for 'allocated' elements.  The number\n     * currently in use is ob_size.\n     * Invariants:\n     *     0 <= ob_size <= allocated\n     *     len(list) == ob_size\n     *     ob_item == NULL implies ob_size == allocated == 0\n     * list.sort() temporarily sets allocated to -1 to detect mutations.\n     *\n     * Items must normally not be NULL, except during construction when\n     * the list is not yet visible outside the function that builds it.\n     */\n    Py_ssize_t allocated;\n} PyListObject;\n\nPyAPI_FUNC(PyObject *) _PyList_Extend(PyListObject *, PyObject *);\nPyAPI_FUNC(void) _PyList_DebugMallocStats(FILE *out);\n\n/* Cast argument to PyListObject* type. */\n#define _PyList_CAST(op) \\\n    (assert(PyList_Check(op)), _Py_CAST(PyListObject*, (op)))\n\n// Macros and static inline functions, trading safety for speed\n\nstatic inline Py_ssize_t PyList_GET_SIZE(PyObject *op) {\n    PyListObject *list = _PyList_CAST(op);\n    return Py_SIZE(list);\n}\n#define PyList_GET_SIZE(op) PyList_GET_SIZE(_PyObject_CAST(op))\n\n#define PyList_GET_ITEM(op, index) (_PyList_CAST(op)->ob_item[(index)])\n\nstatic inline void\nPyList_SET_ITEM(PyObject *op, Py_ssize_t index, PyObject *value) {\n    PyListObject *list = _PyList_CAST(op);\n    list->ob_item[index] = value;\n}\n#define PyList_SET_ITEM(op, index, value) \\\n    PyList_SET_ITEM(_PyObject_CAST(op), (index), _PyObject_CAST(value))\n"},
                          "sourceLanguage": "c"}],
           "results": [{"ruleId": "-Wanalyzer-null-dereference",
                        "taxa": [{"id": "476",
                                  "toolComponent": {"name": "cwe"}}],
                        "properties": {"gcc/analyzer/saved_diagnostic/sm": "malloc",
                                       "gcc/analyzer/saved_diagnostic/enode": 774,
                                       "gcc/analyzer/saved_diagnostic/snode": 169,
                                       "gcc/analyzer/saved_diagnostic/sval": "(struct PyObject *)0B",
                                       "gcc/analyzer/saved_diagnostic/state": "null",
                                       "gcc/analyzer/saved_diagnostic/idx": 4},
                        "level": "warning",
                        "message": {"text": "dereference of NULL 'obj'"},
                        "locations": [{"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                 "uriBaseId": "PWD"},
                                                            "region": {"startLine": 220,
                                                                       "startColumn": 12,
                                                                       "endColumn": 23},
                                                            "contextRegion": {"startLine": 220,
                                                                              "snippet": {"text": "    return ob->ob_type;\n"}}},
                                       "logicalLocations": [{"name": "list_check_exact",
                                                             "fullyQualifiedName": "list_check_exact",
                                                             "decoratedName": "list_check_exact",
                                                             "kind": "function"}]}],
                        "codeFlows": [{"threadFlows": [{"id": "main",
                                                        "locations": [{"properties": {"gcc/analyzer/checker_event/emission_id": "(1)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 167,
                                                                                                                                 "dst_idx": 168,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 14,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 14,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_check_exact",
                                                                                                          "fullyQualifiedName": "list_check_exact",
                                                                                                          "decoratedName": "list_check_exact",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'true' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 1},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(2)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 167,
                                                                                                                                 "dst_idx": 168,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"logicalLocations": [{"name": "list_check_exact",
                                                                                                          "fullyQualifiedName": "list_check_exact",
                                                                                                          "decoratedName": "list_check_exact",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 2},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(3)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_INLINED_CALL"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 15,
                                                                                                                    "startColumn": 28,
                                                                                                                    "endColumn": 29},
                                                                                                         "contextRegion": {"startLine": 15,
                                                                                                                           "snippet": {"text": "    return PyLong_FromLong(PyList_CheckExact(obj));\n"}}},
                                                                                    "logicalLocations": [{"name": "list_check_exact",
                                                                                                          "fullyQualifiedName": "list_check_exact",
                                                                                                          "decoratedName": "list_check_exact",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "inlined call to 'Py_IS_TYPE' from 'list_check_exact'"}},
                                                                       "kinds": ["call",
                                                                                 "function"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 3},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(4)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_INLINED_CALL"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 250,
                                                                                                                    "startColumn": 12,
                                                                                                                    "endColumn": 13},
                                                                                                         "contextRegion": {"startLine": 250,
                                                                                                                           "snippet": {"text": "    return Py_TYPE(ob) == type;\n"}}},
                                                                                    "logicalLocations": [{"name": "Py_IS_TYPE",
                                                                                                          "fullyQualifiedName": "Py_IS_TYPE",
                                                                                                          "decoratedName": "Py_IS_TYPE",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "inlined call to 'Py_TYPE' from 'Py_IS_TYPE'"}},
                                                                       "kinds": ["call",
                                                                                 "function"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 4},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(5)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_WARNING",
                                                                                      "gcc/analyzer/checker_event/original_fndecl": {"name": "list_check_exact",
                                                                                                                                     "fullyQualifiedName": "list_check_exact",
                                                                                                                                     "decoratedName": "list_check_exact",
                                                                                                                                     "kind": "function"},
                                                                                      "gcc/analyzer/checker_event/original_depth": 1},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 220,
                                                                                                                    "startColumn": 12,
                                                                                                                    "endColumn": 23},
                                                                                                         "contextRegion": {"startLine": 220,
                                                                                                                           "snippet": {"text": "    return ob->ob_type;\n"}}},
                                                                                    "logicalLocations": [{"name": "Py_TYPE",
                                                                                                          "fullyQualifiedName": "Py_TYPE",
                                                                                                          "decoratedName": "Py_TYPE",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "dereference of NULL 'obj'"}},
                                                                       "kinds": ["danger"],
                                                                       "nestingLevel": 3,
                                                                       "executionOrder": 5}]}]}]},
                       {"ruleId": "-Wanalyzer-null-dereference",
                        "taxa": [{"id": "476",
                                  "toolComponent": {"name": "cwe"}}],
                        "properties": {"gcc/analyzer/saved_diagnostic/sm": "malloc",
                                       "gcc/analyzer/saved_diagnostic/enode": 788,
                                       "gcc/analyzer/saved_diagnostic/snode": 174,
                                       "gcc/analyzer/saved_diagnostic/sval": "(struct PyObject *)0B",
                                       "gcc/analyzer/saved_diagnostic/state": "null",
                                       "gcc/analyzer/saved_diagnostic/idx": 5},
                        "level": "warning",
                        "message": {"text": "dereference of NULL 'obj'"},
                        "locations": [{"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                 "uriBaseId": "PWD"},
                                                            "region": {"startLine": 220,
                                                                       "startColumn": 12,
                                                                       "endColumn": 23},
                                                            "contextRegion": {"startLine": 220,
                                                                              "snippet": {"text": "    return ob->ob_type;\n"}}},
                                       "logicalLocations": [{"name": "list_check",
                                                             "fullyQualifiedName": "list_check",
                                                             "decoratedName": "list_check",
                                                             "kind": "function"}]}],
                        "codeFlows": [{"threadFlows": [{"id": "main",
                                                        "locations": [{"properties": {"gcc/analyzer/checker_event/emission_id": "(1)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 172,
                                                                                                                                 "dst_idx": 173,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 7,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 7,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_check",
                                                                                                          "fullyQualifiedName": "list_check",
                                                                                                          "decoratedName": "list_check",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'true' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 1},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(2)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 172,
                                                                                                                                 "dst_idx": 173,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"logicalLocations": [{"name": "list_check",
                                                                                                          "fullyQualifiedName": "list_check",
                                                                                                          "decoratedName": "list_check",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 2},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(3)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_INLINED_CALL"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 8,
                                                                                                                    "startColumn": 28,
                                                                                                                    "endColumn": 29},
                                                                                                         "contextRegion": {"startLine": 8,
                                                                                                                           "snippet": {"text": "    return PyLong_FromLong(PyList_Check(obj));\n"}}},
                                                                                    "logicalLocations": [{"name": "list_check",
                                                                                                          "fullyQualifiedName": "list_check",
                                                                                                          "decoratedName": "list_check",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "inlined call to 'Py_TYPE' from 'list_check'"}},
                                                                       "kinds": ["call",
                                                                                 "function"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 3},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(4)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_WARNING",
                                                                                      "gcc/analyzer/checker_event/original_fndecl": {"name": "list_check",
                                                                                                                                     "fullyQualifiedName": "list_check",
                                                                                                                                     "decoratedName": "list_check",
                                                                                                                                     "kind": "function"},
                                                                                      "gcc/analyzer/checker_event/original_depth": 1},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 220,
                                                                                                                    "startColumn": 12,
                                                                                                                    "endColumn": 23},
                                                                                                         "contextRegion": {"startLine": 220,
                                                                                                                           "snippet": {"text": "    return ob->ob_type;\n"}}},
                                                                                    "logicalLocations": [{"name": "Py_TYPE",
                                                                                                          "fullyQualifiedName": "Py_TYPE",
                                                                                                          "decoratedName": "Py_TYPE",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "dereference of NULL 'obj'"}},
                                                                       "kinds": ["danger"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 4}]}]}]},
                       {"ruleId": "-Wanalyzer-null-dereference",
                        "taxa": [{"id": "476",
                                  "toolComponent": {"name": "cwe"}}],
                        "properties": {"gcc/analyzer/saved_diagnostic/sm": "malloc",
                                       "gcc/analyzer/saved_diagnostic/enode": 569,
                                       "gcc/analyzer/saved_diagnostic/snode": 122,
                                       "gcc/analyzer/saved_diagnostic/sval": "(struct PyObject *)0B",
                                       "gcc/analyzer/saved_diagnostic/state": "null",
                                       "gcc/analyzer/saved_diagnostic/idx": 2},
                        "level": "warning",
                        "message": {"text": "dereference of NULL 'obj'"},
                        "locations": [{"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                 "uriBaseId": "PWD"},
                                                            "region": {"startLine": 220,
                                                                       "startColumn": 12,
                                                                       "endColumn": 23},
                                                            "contextRegion": {"startLine": 220,
                                                                              "snippet": {"text": "    return ob->ob_type;\n"}}},
                                       "logicalLocations": [{"name": "list_get_item",
                                                             "fullyQualifiedName": "list_get_item",
                                                             "decoratedName": "list_get_item",
                                                             "kind": "function"}]}],
                        "codeFlows": [{"threadFlows": [{"id": "main",
                                                        "locations": [{"properties": {"gcc/analyzer/checker_event/emission_id": "(1)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 119,
                                                                                                                                 "dst_idx": 120,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 55,
                                                                                                                    "startColumn": 8,
                                                                                                                    "endColumn": 9},
                                                                                                         "contextRegion": {"startLine": 55,
                                                                                                                           "snippet": {"text": "    if (!PyArg_ParseTuple(args, \"On\", &obj, &i)) {\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_item",
                                                                                                          "fullyQualifiedName": "list_get_item",
                                                                                                          "decoratedName": "list_get_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'false' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 1},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(2)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 119,
                                                                                                                                 "dst_idx": 120,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 58,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 58,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_item",
                                                                                                          "fullyQualifiedName": "list_get_item",
                                                                                                          "decoratedName": "list_get_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 2},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(3)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 120,
                                                                                                                                 "dst_idx": 121,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 58,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 58,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_item",
                                                                                                          "fullyQualifiedName": "list_get_item",
                                                                                                          "decoratedName": "list_get_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'true' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 3},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(4)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 120,
                                                                                                                                 "dst_idx": 121,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 58,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 58,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_item",
                                                                                                          "fullyQualifiedName": "list_get_item",
                                                                                                          "decoratedName": "list_get_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 4},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(5)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_STATE_CHANGE"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 58,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 58,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_item",
                                                                                                          "fullyQualifiedName": "list_get_item",
                                                                                                          "decoratedName": "list_get_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "'obj' is NULL"}},
                                                                       "kinds": ["release",
                                                                                 "memory"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 5},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(6)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_STATE_CHANGE"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 59,
                                                                                                                    "startColumn": 12,
                                                                                                                    "endColumn": 13},
                                                                                                         "contextRegion": {"startLine": 59,
                                                                                                                           "snippet": {"text": "    return Py_XNewRef(PyList_GET_ITEM(obj, i));\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_item",
                                                                                                          "fullyQualifiedName": "list_get_item",
                                                                                                          "decoratedName": "list_get_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "'obj' is NULL"}},
                                                                       "kinds": ["release",
                                                                                 "memory"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 6},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(7)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_INLINED_CALL"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 59,
                                                                                                                    "startColumn": 12,
                                                                                                                    "endColumn": 13},
                                                                                                         "contextRegion": {"startLine": 59,
                                                                                                                           "snippet": {"text": "    return Py_XNewRef(PyList_GET_ITEM(obj, i));\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_item",
                                                                                                          "fullyQualifiedName": "list_get_item",
                                                                                                          "decoratedName": "list_get_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "inlined call to 'Py_TYPE' from 'list_get_item'"}},
                                                                       "kinds": ["call",
                                                                                 "function"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 7},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(8)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_WARNING",
                                                                                      "gcc/analyzer/checker_event/original_fndecl": {"name": "list_get_item",
                                                                                                                                     "fullyQualifiedName": "list_get_item",
                                                                                                                                     "decoratedName": "list_get_item",
                                                                                                                                     "kind": "function"},
                                                                                      "gcc/analyzer/checker_event/original_depth": 1},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 220,
                                                                                                                    "startColumn": 12,
                                                                                                                    "endColumn": 23},
                                                                                                         "contextRegion": {"startLine": 220,
                                                                                                                           "snippet": {"text": "    return ob->ob_type;\n"}}},
                                                                                    "logicalLocations": [{"name": "Py_TYPE",
                                                                                                          "fullyQualifiedName": "Py_TYPE",
                                                                                                          "decoratedName": "Py_TYPE",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "dereference of NULL 'obj'"}},
                                                                       "kinds": ["danger"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 8}]}]}]},
                       {"ruleId": "-Wanalyzer-null-dereference",
                        "taxa": [{"id": "476",
                                  "toolComponent": {"name": "cwe"}}],
                        "properties": {"gcc/analyzer/saved_diagnostic/sm": "malloc",
                                       "gcc/analyzer/saved_diagnostic/enode": 695,
                                       "gcc/analyzer/saved_diagnostic/snode": 182,
                                       "gcc/analyzer/saved_diagnostic/sval": "(struct PyObject *)0B",
                                       "gcc/analyzer/saved_diagnostic/state": "null",
                                       "gcc/analyzer/saved_diagnostic/idx": 3},
                        "level": "warning",
                        "message": {"text": "dereference of NULL 'op'"},
                        "locations": [{"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                 "uriBaseId": "PWD"},
                                                            "region": {"startLine": 220,
                                                                       "startColumn": 12,
                                                                       "endColumn": 23},
                                                            "contextRegion": {"startLine": 220,
                                                                              "snippet": {"text": "    return ob->ob_type;\n"}}},
                                       "logicalLocations": [{"name": "PyList_GET_SIZE",
                                                             "fullyQualifiedName": "PyList_GET_SIZE",
                                                             "decoratedName": "PyList_GET_SIZE",
                                                             "kind": "function"}]}],
                        "codeFlows": [{"threadFlows": [{"id": "main",
                                                        "locations": [{"properties": {"gcc/analyzer/checker_event/emission_id": "(1)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_FUNCTION_ENTRY"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 32,
                                                                                                                    "startColumn": 1,
                                                                                                                    "endColumn": 14},
                                                                                                         "contextRegion": {"startLine": 32,
                                                                                                                           "snippet": {"text": "list_get_size(PyObject *Py_UNUSED(module), PyObject *obj)\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_size",
                                                                                                          "fullyQualifiedName": "list_get_size",
                                                                                                          "decoratedName": "list_get_size",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "entry to 'list_get_size'"}},
                                                                       "kinds": ["enter",
                                                                                 "function"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 1},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(2)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 141,
                                                                                                                                 "dst_idx": 142,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 34,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 34,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_size",
                                                                                                          "fullyQualifiedName": "list_get_size",
                                                                                                          "decoratedName": "list_get_size",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'true' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 2},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(3)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 141,
                                                                                                                                 "dst_idx": 142,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"logicalLocations": [{"name": "list_get_size",
                                                                                                          "fullyQualifiedName": "list_get_size",
                                                                                                          "decoratedName": "list_get_size",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 3},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(4)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_CALL_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CALL",
                                                                                                                                 "src_idx": 143,
                                                                                                                                 "dst_idx": 181,
                                                                                                                                 "desc": "call"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 35,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 35,
                                                                                                                           "snippet": {"text": "    RETURN_SIZE(PyList_GET_SIZE(obj));\n"}}},
                                                                                    "logicalLocations": [{"name": "list_get_size",
                                                                                                          "fullyQualifiedName": "list_get_size",
                                                                                                          "decoratedName": "list_get_size",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "calling 'PyList_GET_SIZE' from 'list_get_size'"}},
                                                                       "kinds": ["call",
                                                                                 "function"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 4},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(5)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_FUNCTION_ENTRY"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/cpython/listobject.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 33,
                                                                                                                    "startColumn": 26,
                                                                                                                    "endColumn": 41},
                                                                                                         "contextRegion": {"startLine": 33,
                                                                                                                           "snippet": {"text": "static inline Py_ssize_t PyList_GET_SIZE(PyObject *op) {\n"}}},
                                                                                    "logicalLocations": [{"name": "PyList_GET_SIZE",
                                                                                                          "fullyQualifiedName": "PyList_GET_SIZE",
                                                                                                          "decoratedName": "PyList_GET_SIZE",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "entry to 'PyList_GET_SIZE'"}},
                                                                       "kinds": ["enter",
                                                                                 "function"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 5},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(6)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_INLINED_CALL"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/cpython/listobject.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 34,
                                                                                                                    "startColumn": 26,
                                                                                                                    "endColumn": 27},
                                                                                                         "contextRegion": {"startLine": 34,
                                                                                                                           "snippet": {"text": "    PyListObject *list = _PyList_CAST(op);\n"}}},
                                                                                    "logicalLocations": [{"name": "PyList_GET_SIZE",
                                                                                                          "fullyQualifiedName": "PyList_GET_SIZE",
                                                                                                          "decoratedName": "PyList_GET_SIZE",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "inlined call to 'Py_TYPE' from 'PyList_GET_SIZE'"}},
                                                                       "kinds": ["call",
                                                                                 "function"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 6},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(7)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_WARNING",
                                                                                      "gcc/analyzer/checker_event/original_fndecl": {"name": "PyList_GET_SIZE",
                                                                                                                                     "fullyQualifiedName": "PyList_GET_SIZE",
                                                                                                                                     "decoratedName": "PyList_GET_SIZE",
                                                                                                                                     "kind": "function"},
                                                                                      "gcc/analyzer/checker_event/original_depth": 2},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 220,
                                                                                                                    "startColumn": 12,
                                                                                                                    "endColumn": 23},
                                                                                                         "contextRegion": {"startLine": 220,
                                                                                                                           "snippet": {"text": "    return ob->ob_type;\n"}}},
                                                                                    "logicalLocations": [{"name": "Py_TYPE",
                                                                                                          "fullyQualifiedName": "Py_TYPE",
                                                                                                          "decoratedName": "Py_TYPE",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "dereference of NULL 'op'"}},
                                                                       "kinds": ["danger"],
                                                                       "nestingLevel": 3,
                                                                       "executionOrder": 7}]}]}]},
                       {"ruleId": "-Wanalyzer-null-dereference",
                        "taxa": [{"id": "476",
                                  "toolComponent": {"name": "cwe"}}],
                        "properties": {"gcc/analyzer/saved_diagnostic/sm": "malloc",
                                       "gcc/analyzer/saved_diagnostic/enode": 432,
                                       "gcc/analyzer/saved_diagnostic/snode": 177,
                                       "gcc/analyzer/saved_diagnostic/sval": "(struct PyObject *)0B",
                                       "gcc/analyzer/saved_diagnostic/state": "null",
                                       "gcc/analyzer/saved_diagnostic/idx": 0},
                        "level": "warning",
                        "message": {"text": "dereference of NULL 'op'"},
                        "locations": [{"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                 "uriBaseId": "PWD"},
                                                            "region": {"startLine": 220,
                                                                       "startColumn": 12,
                                                                       "endColumn": 23},
                                                            "contextRegion": {"startLine": 220,
                                                                              "snippet": {"text": "    return ob->ob_type;\n"}}},
                                       "logicalLocations": [{"name": "PyList_SET_ITEM",
                                                             "fullyQualifiedName": "PyList_SET_ITEM",
                                                             "decoratedName": "PyList_SET_ITEM",
                                                             "kind": "function"}]}],
                        "codeFlows": [{"threadFlows": [{"id": "main",
                                                        "locations": [{"properties": {"gcc/analyzer/checker_event/emission_id": "(1)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_FUNCTION_ENTRY"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 77,
                                                                                                                    "startColumn": 1,
                                                                                                                    "endColumn": 14},
                                                                                                         "contextRegion": {"startLine": 77,
                                                                                                                           "snippet": {"text": "list_set_item(PyObject *Py_UNUSED(module), PyObject *args)\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "entry to 'list_set_item'"}},
                                                                       "kinds": ["enter",
                                                                                 "function"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 1},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(2)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 88,
                                                                                                                                 "dst_idx": 89,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 81,
                                                                                                                    "startColumn": 8,
                                                                                                                    "endColumn": 9},
                                                                                                         "contextRegion": {"startLine": 81,
                                                                                                                           "snippet": {"text": "    if (!PyArg_ParseTuple(args, \"OnO\", &obj, &i, &value)) {\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'false' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 2},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(3)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 88,
                                                                                                                                 "dst_idx": 89,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 84,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 84,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 3},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(4)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 89,
                                                                                                                                 "dst_idx": 90,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 84,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 84,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'true' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 4},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(5)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 89,
                                                                                                                                 "dst_idx": 90,
                                                                                                                                 "desc": "true (flags TRUE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 84,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 84,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "true"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 5},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(6)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_STATE_CHANGE"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 84,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 84,
                                                                                                                           "snippet": {"text": "    NULLABLE(obj);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "'obj' is NULL"}},
                                                                       "kinds": ["release",
                                                                                 "memory"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 6},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(7)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_START_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 91,
                                                                                                                                 "dst_idx": 93,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 85,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 85,
                                                                                                                           "snippet": {"text": "    NULLABLE(value);\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "following 'false' branch..."}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 7},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(8)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_END_CFG_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CFG_EDGE",
                                                                                                                                 "src_idx": 91,
                                                                                                                                 "dst_idx": 93,
                                                                                                                                 "desc": "false (flags FALSE_VALUE | EXECUTABLE) (has goto_locus)"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 86,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 86,
                                                                                                                           "snippet": {"text": "    PyList_SET_ITEM(obj, i, Py_XNewRef(value));\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "...to here"}},
                                                                       "kinds": ["branch",
                                                                                 "false"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 8},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(9)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_STATE_CHANGE"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 86,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 86,
                                                                                                                           "snippet": {"text": "    PyList_SET_ITEM(obj, i, Py_XNewRef(value));\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "'obj' is NULL"}},
                                                                       "kinds": ["release",
                                                                                 "memory"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 9},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(10)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_CALL_EDGE",
                                                                                      "gcc/analyzer/superedge_event/superedge": {"kind": "SUPEREDGE_CALL",
                                                                                                                                 "src_idx": 96,
                                                                                                                                 "dst_idx": 176,
                                                                                                                                 "desc": "call"}},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Modules/_testcapi/list.c",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 86,
                                                                                                                    "startColumn": 5,
                                                                                                                    "endColumn": 6},
                                                                                                         "contextRegion": {"startLine": 86,
                                                                                                                           "snippet": {"text": "    PyList_SET_ITEM(obj, i, Py_XNewRef(value));\n"}}},
                                                                                    "logicalLocations": [{"name": "list_set_item",
                                                                                                          "fullyQualifiedName": "list_set_item",
                                                                                                          "decoratedName": "list_set_item",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "calling 'PyList_SET_ITEM' from 'list_set_item'"}},
                                                                       "kinds": ["call",
                                                                                 "function"],
                                                                       "nestingLevel": 1,
                                                                       "executionOrder": 10},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(11)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_FUNCTION_ENTRY"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/cpython/listobject.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 42,
                                                                                                                    "startColumn": 1,
                                                                                                                    "endColumn": 16},
                                                                                                         "contextRegion": {"startLine": 42,
                                                                                                                           "snippet": {"text": "PyList_SET_ITEM(PyObject *op, Py_ssize_t index, PyObject *value) {\n"}}},
                                                                                    "logicalLocations": [{"name": "PyList_SET_ITEM",
                                                                                                          "fullyQualifiedName": "PyList_SET_ITEM",
                                                                                                          "decoratedName": "PyList_SET_ITEM",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "entry to 'PyList_SET_ITEM'"}},
                                                                       "kinds": ["enter",
                                                                                 "function"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 11},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(12)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_INLINED_CALL"},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/cpython/listobject.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 43,
                                                                                                                    "startColumn": 26,
                                                                                                                    "endColumn": 27},
                                                                                                         "contextRegion": {"startLine": 43,
                                                                                                                           "snippet": {"text": "    PyListObject *list = _PyList_CAST(op);\n"}}},
                                                                                    "logicalLocations": [{"name": "PyList_SET_ITEM",
                                                                                                          "fullyQualifiedName": "PyList_SET_ITEM",
                                                                                                          "decoratedName": "PyList_SET_ITEM",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "inlined call to 'Py_TYPE' from 'PyList_SET_ITEM'"}},
                                                                       "kinds": ["call",
                                                                                 "function"],
                                                                       "nestingLevel": 2,
                                                                       "executionOrder": 12},
                                                                      {"properties": {"gcc/analyzer/checker_event/emission_id": "(13)",
                                                                                      "gcc/analyzer/checker_event/kind": "EK_WARNING",
                                                                                      "gcc/analyzer/checker_event/original_fndecl": {"name": "PyList_SET_ITEM",
                                                                                                                                     "fullyQualifiedName": "PyList_SET_ITEM",
                                                                                                                                     "decoratedName": "PyList_SET_ITEM",
                                                                                                                                     "kind": "function"},
                                                                                      "gcc/analyzer/checker_event/original_depth": 2},
                                                                       "location": {"physicalLocation": {"artifactLocation": {"uri": "./Include/object.h",
                                                                                                                              "uriBaseId": "PWD"},
                                                                                                         "region": {"startLine": 220,
                                                                                                                    "startColumn": 12,
                                                                                                                    "endColumn": 23},
                                                                                                         "contextRegion": {"startLine": 220,
                                                                                                                           "snippet": {"text": "    return ob->ob_type;\n"}}},
                                                                                    "logicalLocations": [{"name": "Py_TYPE",
                                                                                                          "fullyQualifiedName": "Py_TYPE",
                                                                                                          "decoratedName": "Py_TYPE",
                                                                                                          "kind": "function"}],
                                                                                    "message": {"text": "dereference of NULL 'op'"}},
                                                                       "kinds": ["danger"],
                                                                       "nestingLevel": 3,
                                                                       "executionOrder": 13}]}]}]}]}]}
